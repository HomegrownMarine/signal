{"version":3,"sources":["homegrown-lib/calcs.js","homegrown-lib/utilities.js","homegrown-lib/maneuvers.js","homegrown-lib/polars.js","signal/data.js","signal/graph.js","signal/map.js"],"names":[],"mappings":"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AAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,C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","file":"signal.js","sourcesContent":["(function() {\n    \"use strict\";\n\n    var R = '3440.06479'; //radius of earth in nautical miles\n\n    var deg = function deg(radians) {\n        return (radians*180/Math.PI + 360) % 360;\n    };\n\n    var rad = function rad(degrees) {\n        return degrees * Math.PI / 180;\n    };\n\n    var lawOfCosines = function(a, b, gamma) {\n        return Math.sqrt(a * a + b * b - 2 * b * a * Math.cos(rad(Math.abs(gamma))));\n    };\n\n    var calcs = {\n        tws: function tws(speed, awa, aws) {\n            //TODO: heel compensation\n            return lawOfCosines(speed, aws, awa);\n        },\n\n        twa: function twa(speed, awa, tws) {\n            var angle = deg(Math.asin(speed * Math.sin(rad(Math.abs(awa))) / tws)) + Math.abs(awa);\n            if (awa < 0) angle *= -1;\n            return angle;\n        },\n\n        gws: function gws(sog, awa, aws) {\n            return lawOfCosines(sog, aws, awa);\n        },\n\n        gwd: function gwd(sog, cog, awa, gws) {\n            var gwa = calcs.twa(sog, awa, gws);\n            return (cog + gwa + 360) % 360;\n        },\n\n        vmg: function vmg(speed, twa) {\n            return Math.abs(speed * Math.cos(rad(twa)));\n        },\n\n        twd: function twd(hdg, twa) {\n            return (hdg + twa + 360) % 360;\n        },\n\n        //see: http://www.movable-type.co.uk/scripts/latlong.html\n        distance: function distance(lat1, lon1, lat2, lon2) {\n            lat1 = rad(lat1);\n            lat2 = rad(lat2);\n            lon1 = rad(lon1);\n            lon2 = rad(lon2);\n\n            var dLat = lat2-lat1,\n                dLon = lon2-lon1;\n            \n            var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon/2) * Math.sin(dLon/2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n            return R * c;\n        },\n\n        bearing: function bearing(lat1, lon1, lat2, lon2) {\n            lat1 = rad(lat1);\n            lat2 = rad(lat2);\n            lon1 = rad(lon1);\n            lon2 = rad(lon2);\n            \n            var dLon = lon2-lon1;\n            \n            var y = Math.sin(dLon) * Math.cos(lat2);\n            var x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(dLon);\n            \n            return deg( Math.atan2(y, x) );\n        },\n\n        steer: function steer(from, to) {\n            var diff = to - from;\n            if ( diff > 180 ) {\n                diff = 360 - diff;\n            }\n            else if ( diff < -180 ) {\n                diff = 360 + diff;\n            }\n\n            return diff;\n        },\n\n        crossTrackError: function crossTrackError(fromLat, fromLon, lat, lon, toLat, toLan) {\n            var d = distance(fromLat, fromLon, toLat, toLan);\n            var b1 = bearing(fromLat, fromLon, toLat, toLan);\n            var b2 = bearing(fromLat, fromLon, lat, lon);\n            return Math.asin(Math.sin(d/R) * Math.sin(rad(b2-b1))) * R;\n        },\n\n        set: function set(speed, hdg, sog, cog) {\n            //GM: TODO: understand 90 deg offset.\n            //convert cog and hdg to radians, with north right\n            hdg = rad(90.0 - hdg);\n            cog = rad(90.0 - cog);\n\n            //break out x and y components of current vector\n            var current_x = sog * Math.cos(cog) - speed * Math.cos(hdg);\n            var current_y = sog * Math.sin(cog) - speed * Math.sin(hdg);\n\n            //set is the angle of the current vector (note we special case pure North or South)\n            var _set = 0;\n            if ( current_x === 0 ) {\n                _set = current_y < 0? 180: 0;\n            }\n            else {\n                //normalize 0 - 360\n                _set = (90.0 - deg(Math.atan2(current_y, current_x)) + 360) % 360;\n            }\n            return _set;\n        },\n\n        drift: function drift(speed, hdg, sog, cog) {\n            //GM: TODO: understand 90 deg offset.\n            //convert cog and hdg to radians, with north right\n            hdg = rad(90.0 - hdg);\n            cog = rad(90.0 - cog);\n\n            //break out x and y components of current vector\n            var current_x = sog * Math.cos(cog) - speed * Math.cos(hdg);\n            var current_y = sog * Math.sin(cog) - speed * Math.sin(hdg);\n\n            //drift is the magnitude of the current vector\n            var _drift = Math.sqrt(current_x * current_x + current_y * current_y);\n            return _drift;\n        }\n    };\n\n    \n    if (typeof exports != 'undefined') {\n        exports.calcs = calcs;\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = calcs;\n    } else {\n        if ( typeof homegrown == 'undefined' ) {\n            window.homegrown = {};\n        }\n        homegrown.calculations = calcs;\n    }\n})();\n","(function() {\n    \"use strict\";\n    var _;\n\n    if ( typeof window != 'undefined' ) {\n        _ = window._;\n    }\n    else if ( typeof require == 'function' ) {\n        _ = require('lodash');\n    }\n\n    //from stack overflow\n    var remove_comments_regex = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n    var argument_names_regex = /([^\\s,]+)/g;\n    function getParamNames(funct) {\n      var fnStr = funct.toString().replace(remove_comments_regex, '');\n      var result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).match(argument_names_regex);\n      if ( result === null )\n         result = [];\n      return result;\n    }\n\n    var utilities = {\n        /**\n         * given a metric, will compute it's derivitive.\n         * @param name - the name of the derivitive\n         * @param metric - the name of the metric to calculate the derivitive from\n         * @param [scaleFactor] - optional conversion factor, if the new metric should\n         *                        be in different units.\n         * @return \n\n         * Example: var acceleration = derivitive('acceleration', 'speed');\n         * assert acceleration({'speed': 5, 't':1000}) == null //first execution\n         * assert acceleration({'speed': 5, 't':1000}) == {'acceleration': 0}\n         * assert acceleration({'speed': 6, 't':1000}) == {'acceleration': 1}\n         */\n        derivitive: function derivitive(name, metric, scaleFactor) {\n            scaleFactor = scaleFactor || 1;\n            var lastValue = null, lastTime;\n\n            return function(args) {\n                var result = null;\n\n                if (metric in args) {\n                    if (lastValue !== null) {\n                        var delta = (args[metric] - lastValue) / ((args.t - lastTime)/1000) * scaleFactor;\n\n                        result = {};\n                        result[name] = delta;\n                    }\n\n                    lastValue = args[metric];\n                    lastTime = args.t;\n                }\n\n                return result;\n            };\n        },\n        average: function average(name, metric, size) {\n            var rolling = 0;\n            var counter = 0;\n            var windowX = [];\n\n            return function(args) {\n                var result = null;\n\n                if (metric in args) {\n                    var pos = counter % size;\n                    counter++;\n\n                    if (windowX[pos]) {\n                        rolling -= windowX[pos];\n                    }\n                    rolling += args[metric];\n                    windowX[pos] = args[metric];\n\n                    result = {};\n                    result[name] = rolling / windowX.length;\n                }\n\n                return result;\n            };\n        },\n\n        /**\n         * Wraps function to allow it to handle streaming inputs.  \n         * @param funct - the name of the function will be used to name the return value.  \n         *                The name of the arguments will be used to pull the arguments out \n         *                of maps of possible arguments.\n         * @return {object} - will return null if all of the arguments aren't avaible to execute the\n         *                    function, or an object of the form: {function_name: result}.\n         */\n        delayedInputs: function delayedInputs(funct) {\n            var argumentNames = getParamNames(funct);\n            var runningArgs = [];\n\n            return function(args) {\n                // var presentValues = _.map(argumentNames, function(name) { return args[name]; });\n\n                var allSet = true;\n                for( var i=0; i < argumentNames.length; i++ ) {\n                    if ( argumentNames[i] in args ) {\n                        runningArgs[i] = args[argumentNames[i]];\n                    }\n\n                    if ( !runningArgs[i] ) {\n                        allSet = false;\n                    }\n                }\n\n                //if all \n                if (allSet) {\n                    var result = funct.apply(this, runningArgs);\n                    runningArgs = [];\n                    var obj = {};\n                    obj[funct.name] = result;\n                    return obj;\n                }\n\n                return null;\n            };\n        }\n    };\n\n    if (typeof exports != 'undefined') {\n        exports.utilities = utilities;\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports.utilities = utilities;\n    } else {\n        if ( typeof homegrown == 'undefined' ) {\n            window.homegrown = {};\n        }\n        homegrown.streamingUtilities = utilities;\n    }\n})();","(function() {\n    \"use strict\";\n    var _;\n\n    if ( typeof window != 'undefined' ) {\n        _ = window._;\n    }\n    else if( typeof require == 'function' ) {\n        _ = require('lodash');\n    }\n\n    //each of these functions takes a \"tack\" object, and \n    //a section of data around the tack and adds some specific\n    //metric(s) to the tack\n    var tackUtils = {\n        findCenter: function findCenter(tack, data) {\n            var centerIdx;\n\n            for (var j=0; j < data.length; j++) {\n                if ( tack.time.isSame(data[j].t) ) {\n                    centerIdx = j-1;\n                    break;\n                }\n            }\n\n            tack.timing.center = centerIdx;\n            tack.position = [data[centerIdx].lon, data[centerIdx].lat];\n        },\n\n        findStart: function findStart(tack, data) {\n            //work backwards to start of tack\n            var startIdx;\n            for (var j=tack.timing.center-3; j >= 0; j--) {\n                if ('rot' in data[j] ) {\n                    if ( Math.abs(data[j].rot) < 2.5 ) {\n                        startIdx = j;\n                        break;\n                    }                        \n                }\n            }\n\n            tack.timing.start = startIdx  || 15;\n            tack.startPosition = [data[tack.timing.start].lon, data[tack.timing.start].lat];\n        },\n\n        calculateEntrySpeeds: function calculateEntrySpeeds(tack, data) {\n            //then 5 seconds farther back to get starting vmg/speed\n            //TODO: edge cases                \n            var startingIdx = Math.max(0, tack.timing.start-6);\n            var endingIdx = Math.min(data.length-2, tack.timing.start-2);\n\n            var speedSum = 0, vmgSum = 0;\n            var speedCount = 0, vmgCount = 0;\n            var twaSum=0, twaCount = 0;\n            var hdgSum=0, hdgCount = 0;\n            for (var j=startingIdx+1; j <= endingIdx; j++) {\n                if ( 'vmg' in data[j] ) {\n                    vmgSum += data[j].vmg;\n                    vmgCount++;\n                }\n                if ( 'speed' in data[j] ) {\n                    speedSum += data[j].speed;\n                    speedCount++;\n                }\n                if ( 'twa' in data[j] ) {\n                    twaSum += data[j].twa;\n                    twaCount++;\n                }\n                if ( 'hdg' in data[j] ) {\n                    hdgSum += data[j].hdg+360;\n                    hdgCount++;\n                }\n            }\n\n            tack.entryVmg = vmgSum / vmgCount;\n            tack.entrySpeed = speedSum / speedCount;\n            tack.entryTwa = twaSum / twaCount;\n            tack.entryHdg = (hdgSum / hdgCount) % 360;\n        },\n\n        findEnd: function findEnd(tack, data) {\n            //then forwards to end of tack\n            //using twa here, because it lags behind hdg and is\n            //what vmg is calculated based on.\n            var minIdx = tack.timing.center;\n            \n            var findMax = (tack.board == 'U-P')>0? true: false;\n            findMax = !findMax;\n\n            for (var j=tack.timing.center; j < tack.timing.center+12; j++) {\n                if ('twa' in data[j] ) {\n                    //if the center didn't have twa, then use the\n                    //next available\n                    if (!('twa' in data[minIdx])) {\n                        minIdx = j;\n                    }\n                    if (findMax) {\n                        if (data[j].twa > data[minIdx].twa) {\n                            minIdx = j;\n                        }    \n                    }\n                    else {\n                        if (data[j].twa < data[minIdx].twa) {\n                            minIdx = j;\n                        }\n                    }\n                }\n            }\n            \n            tack.timing.end = minIdx;\n            tack.maxTwa = data[tack.timing.end].twa;\n            tack.endPosition = [data[tack.timing.end].lon, data[tack.timing.end].lat];\n        },\n\n        findRecoveryTime: function findRecoveryTime(tack, data) {\n            //then find recovery time\n            for (var j=tack.timing.end+5; j < data.length; j++) {\n                if ( 'vmg' in data[j] && tack.entryVmg <= data[j].vmg) {\n                    tack.timing.recovered = j;\n                    break;\n                }\n            }\n\n            //TODO: find better fallback\n            tack.timing.recovered = tack.timing.recovered || (tack.timing.center+30);\n        },\n\n        findRecoveryMetrics: function findRecoveryMetrics(tack, data) {\n            //and find recovery speed and angles\n            \n            var twaSum=0, twaCount = 0;\n            var hdgSum=0, hdgCount = 0;\n\n            var maxIdx = Math.min(tack.timing.recovered+6, data.length);\n            for (var j=tack.timing.recovered; j < maxIdx; j++) {\n                if ( 'twa' in data[j] ) {\n                    twaSum += data[j].twa;\n                    twaCount++;\n                }\n                if ( 'hdg' in data[j] ) {\n                    hdgSum += data[j].hdg+360;\n                    hdgCount++;\n                }\n            }\n\n            tack.recoveryTwa = twaSum / twaCount;\n            tack.recoveryHdg = (hdgSum / hdgCount) % 360;\n        },\n\n        convertIndexesToTimes: function convertIndexesToTimes(tack, data) {\n            tack.timing = _.mapValues(tack.timing, function(index) {\n                return moment(data[index].t);\n            });\n        },\n\n        calculateLoss: function calculateLoss(tack, data) {\n            var lastTime = 0;\n            var covered = 0;\n            var recovered = tack.timing.recovered;\n            \n            _(data)\n                .filter(function(m) { return m.t >= tack.timing.start && m.t <= recovered; } )\n                .each(function(m) {\n                    if ('vmg' in m) {\n                        if ( lastTime ) {\n                            covered += ((m.t - lastTime) / 1000) * m.vmg;\n                        }\n                        lastTime = m.t;                        \n                    }\n                });\n\n            var ideal = tack.entryVmg * ((recovered - tack.timing.start) / 1000);\n            tack.loss = - 6076.11549 / 3600.0 * (ideal - covered);\n        }\n    };\n\n    function findManeuvers(data) {\n        var maneuvers = [];\n\n        //fimd maneuvers\n        var lastBoard = null;\n        var lastBoardStart = data[0].t;\n        for (var i = 0; i < data.length; i++) {\n            if ( 'twa' in data[i] ) {\n                var board = 'U-S';\n                if (-90 <= data[i].twa && data[i].twa < 0)\n                    board = 'U-P';\n                else if (data[i].twa < -90)\n                    board = 'D-P';\n                else if (data[i].twa > 90)\n                    board = 'D-S';\n\n                if (data[i].ot < 300) {\n                    board = \"PS\";\n                }\n\n                if (lastBoard != board) {\n                    if ( lastBoard !== null ) {\n                        maneuvers.push({\n                            board: lastBoard,\n                            start: lastBoardStart,\n                            end: data[i].t\n                        });\n                    }\n                    lastBoard = board;\n                    lastBoardStart = data[i].t;\n                }\n\n            }\n        }\n\n        return maneuvers;\n    }\n\n    function analyzeTacks(maneuvers, data) {\n        var tacks = [];\n\n        //TODO: reverse order, so we can cap a maneuver at the beginning of the next tack (or turndown).\n        //moment.max\n        for (var i = 2; i < maneuvers.length; i++) {\n            //TODO: gybes too\n            if (maneuvers[i].board.charAt(0) == 'U' && maneuvers[i - 1].board.charAt(0) == 'U') {\n                var centerTime = moment(maneuvers[i].start);\n\n                if ( maneuvers[i-1].board == \"PS\" )\n                    return;\n                // if (i + 1 < maneuvers.length) {\n                //     var nextTime = moment(maneuvers[i + 1].start).subtract('seconds', 45);\n                //     if (nextTime < centerTime)\n                //         continue\n                // }\n\n                var from = moment(maneuvers[i].start).subtract('seconds', 20);\n                var fromIdx = _.sortedIndex(data, {t: from}, function(d) { return d.t; });\n\n                var to = moment(maneuvers[i].start).add('seconds', 120);\n                var toIdx = _.sortedIndex(data, {t: to}, function(d) { return d.t; });            \n\n                var range = data.slice(fromIdx, toIdx+1);\n                \n\n                var tack = {\n                    time: centerTime,\n                    board: maneuvers[i].board,\n                    timing: {}\n                };\n\n                //process tack, by running steps in this order.\n                tackUtils.findCenter(tack, range);\n                tackUtils.findStart(tack, range);\n                tackUtils.calculateEntrySpeeds(tack, range);\n                tackUtils.findEnd(tack, range);\n                tackUtils.findRecoveryTime(tack, range);\n                tackUtils.findRecoveryMetrics(tack, range);\n\n                tackUtils.convertIndexesToTimes(tack, range);\n                tackUtils.calculateLoss(tack, range);\n\n                tacks.push(tack);\n                // break;\n            }\n        }\n\n        return tacks;\n    }\n\n    var maneuverUtilities = {\n        findManeuvers: findManeuvers,\n        analyzeTacks: analyzeTacks\n    };\n\n    if (typeof exports != 'undefined') {\n        exports.maneuvers = maneuverUtilities;\n    } else if (typeof module != 'undefined' && module.exports) {\n        module.exports.maneuvers = maneuverUtilities;\n    } else {\n        if ( typeof homegrown == 'undefined' ) {\n            window.homegrown = {};\n        }\n        homegrown.maneuvers = maneuverUtilities;\n    }\n})();","//! polar-table.js\n//! calculate polar targets based on tws.\n//! version : 0.1\n//! homegrownmarine.com\n\n\n\n(function() {\n    \"use strict\";\n\n    var init = function(exports, _) {\n        function PolarTable(allData, targets) {\n            this.all = allData || {};\n            this.targets = targets || {\n                'up': {},\n                'down': {}\n            };\n        }\n\n        PolarTable.prototype.getInterpolatedValue = function(tws, key, upwind) {\n            var appropriateTargets = this.targets[upwind ? 'up' : 'down'];\n            var twspeeds = _.keys(appropriateTargets);\n\n            var found = [0, 0];\n            for (var i = 1; i < twspeeds.length; i++) {\n                if (tws < twspeeds[i]) {\n                    found[1] = twspeeds[i];\n                    found[0] = twspeeds[i - 1];\n                    break;\n                }\n            }\n\n            var percentFirst = 1 - (tws - found[0]) / (found[1] - found[0]);\n            var interpolatedValue = percentFirst * appropriateTargets[found[0]][key] + (1 - percentFirst) * appropriateTargets[found[1]][key];\n            return interpolatedValue;\n        };\n\n        PolarTable.prototype.targetSpeed = function(tws, upwind) {\n            return this.getInterpolatedValue(tws, 'speed', upwind);\n        };\n\n        PolarTable.prototype.targetAngle = function(tws, upwind) {\n            return this.getInterpolatedValue(tws, 'twa', upwind);\n        };\n\n        PolarTable.prototype.targetHeel = function(tws, upwind) {\n            return this.getInterpolatedValue(tws, 'heel', upwind);\n        };\n\n        exports.PolarTable = PolarTable;\n        return PolarTable;\n    };\n\n    var localExports;\n    if (typeof exports != 'undefined') {\n        localExports = exports;\n    } else if (typeof module !== 'undefined' && module.exports) {\n        localExports = module.exports;\n    } else {\n        localExports = window;\n    }\n\n\n    var local_;\n    if (typeof _ != 'undefined') {\n        local_ = _;\n    } else if (typeof require != 'undefined') {\n        local_ = require('lodash');\n    }\n\n    var PolarTable = init(localExports, local_);\n\n    // if require exists, assume we're running in node\n    // and add filesystem based factory\n    if (typeof require != 'undefined') {\n        var fs = require('fs');\n        var readline = require('readline');\n\n        //creates polarTable from filename\n        PolarTable.fromTSV = function(filename, callback) {\n\n            var polars = new PolarTable();\n\n            var rd = readline.createInterface({\n                input: fs.createReadStream(filename),\n                output: process.stdout,\n                terminal: false\n            });\n\n            rd.on('line', function(line) {\n                line = line.trim();\n                if (line.length === 0 || line.indexOf('#') === 0) {\n                    return;\n                }\n\n                // TWS TWA VMG Heel Lee\n                var target = false;\n                var upwind = true;\n\n                // if the line ends in a *, it's a target\n                // for this wind speed\n                if (line.substring(line.length - 1) == '*') {\n                    target = true;\n                    line = line.substring(0, line.length - 1);\n                }\n\n\n                var cols = line.split(' '); //TODO: CSV\n                var tws = +cols[0],\n                    twa = +cols[1],\n                    speed = +cols[2],\n                    heel = +cols[3],\n                    lee = +cols[4];\n\n\n                upwind = twa < 90;\n                if (!(tws in polars.all)) {\n                    polars.all[tws] = {};\n                }\n\n                polars.all[tws][twa] = {\n                    speed: speed,\n                    heel: heel,\n                    lee: lee\n                };\n                if (target) {\n                    polars.targets[upwind ? 'up' : 'down'][tws] = {\n                        twa: twa,\n                        speed: speed,\n                        heel: heel\n                    };\n                }\n            });\n\n            rd.on('close', function() {\n                callback(polars);\n            });\n        };\n    }\n})();","var NM_TO_FT = 6076.11549;\n\n\nfunction rad(deg) {\n    return deg * Math.PI / 180;\n}\n\nfunction deg(rad) {\n    return rad * 180 / Math.PI;\n}\n\nfunction select2(data, metric) {\n    return _.compact(_.map(data, function(point) {\n        if (metric in point) {\n            return [point.t, point[metric]];\n        } else {\n            return null;\n        }\n    }));\n}\n\nfunction select3(data, metric) {\n    return _.compact(_.map(data, function(point) {\n        if (metric in point) {\n            return _.pick(point, 't', metric);\n        } else {\n            return null;\n        }\n    }));\n}\n\nfunction simplify(data, size) {\n    if (data.length < size * 3) {\n        return data;\n    }\n\n    var out = [];\n    var sum = 0;\n    var count = 0;\n    var index = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        var targetIndex = parseInt(i * size / data.length);\n        if (index != targetIndex) {\n            out[index] = [data[i][0], sum / count];\n\n            sum = 0;\n            count = 0;\n            index = targetIndex;\n        }\n\n        sum += data[i][1];\n        count++;\n    }\n\n    return out;\n}\n\nfunction smooth(data, window) {\n\n}\n\nmaneuvers = [];\nvar awa_offset = 5;\n\nfunction refTws(dat, time) {\n    var first10 = _.compact(_.pluck(dat.slice(0, 600), 'twd'));\n    \n    return _.reduce(first10, function(sum, num) {\n        return sum + num;\n    }) / (1.0 * first10.length);\n}\n\nvar g = 0;\n\nfunction buildOutData(dat, offset, calibrate) {\n    calibrate = (calibrate === false) ? false : true; //default to true\n\n    var polars = window.polars = new PolarTable(mayhem_all, mayhem_targets);\n    var calcs = homegrown.calculations;\n    var delayedInputs = homegrown.streamingUtilities.delayedInputs;\n    var derivitive = homegrown.streamingUtilities.derivitive;\n    var average = homegrown.streamingUtilities.average;\n\n    //each of these methods is applied to each stream of\n    //data, and the results incorporated into the data.\n    var xforms = [\n        function calibrate(args) {\n            if ( 'awa' in args ) {\n                args.awa -= awa_offset;\n                if (args.awa > 180) {\n                    args.awa = -1 * (360 - args.awa);\n                }\n            }\n        },\n        \n        delayedInputs(calcs.tws),\n        delayedInputs(calcs.twa),\n        delayedInputs(calcs.twd),\n        delayedInputs(calcs.gws),\n        delayedInputs(calcs.gwd),\n        delayedInputs(calcs.set),\n        delayedInputs(calcs.drift),\n        delayedInputs(calcs.vmg),\n        delayedInputs(function targetSpeed(tws, twa) {\n            return polars.targetSpeed(tws, Math.abs(twa) <= 90);\n        }),\n        delayedInputs(function targetAngle(tws, twa) {\n            return polars.targetAngle(tws, Math.abs(twa) <= 90);\n        }),\n        delayedInputs(function targetHeel(tws, twa) {\n            return polars.targetHeel(tws, Math.abs(twa) <= 90);\n        }),\n        delayedInputs(function targetVmg(targetSpeed, targetAngle, vmg) {\n            return calcs.vmg(targetSpeed, targetAngle);\n            // return (targetVmg / vmg) * 100;\n        }),\n\n        //TODO: smooth and filter wind vars\n        //TODO: Fourier transform\n        //TODO: rolling averages\n\n        average('tws_20', 'tws', 20),\n        average('gws_20', 'gws', 20),\n\n        average('twd_20', 'twd', 20),\n        average('gwd_20', 'gwd', 20),\n\n        average('set_20', 'set', 20),\n\n        function abses(args) {\n            if ('awa' in args) {\n                args.aawa = Math.abs(args.awa);\n            }\n            if ('twa' in args) {\n                args.atwa = Math.abs(args.twa);\n            }\n        },\n\n        derivitive('acceleration', 'speed', (NM_TO_FT / 3600)),\n        derivitive('rot', 'hdg')\n    ];\n\n    //calc missing pieces\n    var last = new Date().getTime();\n\n\n    for ( var i=0; i < dat.length; i++ ) {\n        var pt = dat[i];\n        if ('t' in pt) {\n            pt.ot = pt.t;\n            pt.t = pt.ot*1000 + offset;\n        }\n\n        // testing calibration approaches here\n        if ( 'hdg' in pt) {\n            pt.hdg = pt.hdg + 0;\n        }\n\n        if ( 'speed' in pt ) {\n            pt.speed = pt.speed * 1.05;\n        }\n    \n        for ( var x=0; x < xforms.length; x++ ) {\n            var xform = xforms[x];\n\n            var result = xform(pt);\n            if (result) {\n                for (var k in result) {\n                    pt[k] = result[k];\n                }\n            }\n        }\n    }\n    \n    \n\n    var maneuvers = homegrown.maneuvers.findManeuvers(dat);\n    var tacks = homegrown.maneuvers.analyzeTacks(maneuvers, dat);\n\n    return {\n        maneuvers: maneuvers,\n        tacks: tacks\n    };\n}\n\nvar mayhem_all = {\"4\":{\"30\":{\"speed\":2.483,\"heel\":2.4,\"lee\":4.1},\"33\":{\"speed\":2.788,\"heel\":2.7,\"lee\":3.58},\"36\":{\"speed\":3.069,\"heel\":2.9,\"lee\":3.2},\"39\":{\"speed\":3.327,\"heel\":3.1,\"lee\":2.9},\"42\":{\"speed\":3.563,\"heel\":3.3,\"lee\":2.67},\"45\":{\"speed\":3.776,\"heel\":3.4,\"lee\":2.48},\"50\":{\"speed\":4.091,\"heel\":3.6,\"lee\":2.22},\"55\":{\"speed\":4.351,\"heel\":3.8,\"lee\":2.01},\"60\":{\"speed\":4.56,\"heel\":3.8,\"lee\":1.83},\"65\":{\"speed\":4.72,\"heel\":3.7,\"lee\":1.68},\"70\":{\"speed\":4.833,\"heel\":3.6,\"lee\":1.55},\"75\":{\"speed\":4.898,\"heel\":3.5,\"lee\":1.43},\"80\":{\"speed\":4.928,\"heel\":3.2,\"lee\":1.31},\"85\":{\"speed\":4.914,\"heel\":2.9,\"lee\":1.21},\"90\":{\"speed\":4.978,\"heel\":3.8,\"lee\":1.35},\"95\":{\"speed\":5.048,\"heel\":3.6,\"lee\":1.28},\"100\":{\"speed\":5.083,\"heel\":3.6,\"lee\":1.22},\"105\":{\"speed\":5.064,\"heel\":3.4,\"lee\":1.14},\"110\":{\"speed\":4.999,\"heel\":3,\"lee\":1.06},\"115\":{\"speed\":4.875,\"heel\":2.6,\"lee\":0.96},\"120\":{\"speed\":4.714,\"heel\":2.9,\"lee\":1.08},\"125\":{\"speed\":4.564,\"heel\":2.6,\"lee\":0.99},\"130\":{\"speed\":4.356,\"heel\":2.1,\"lee\":0.89},\"135\":{\"speed\":4.095,\"heel\":1.6,\"lee\":0.78},\"140\":{\"speed\":3.814,\"heel\":1.2,\"lee\":0.66},\"145\":{\"speed\":3.532,\"heel\":0.8,\"lee\":0.53},\"150\":{\"speed\":3.253,\"heel\":0.5,\"lee\":0.4},\"155\":{\"speed\":2.976,\"heel\":0.3,\"lee\":0.28},\"160\":{\"speed\":2.703,\"heel\":0.2,\"lee\":0.19},\"165\":{\"speed\":2.499,\"heel\":0.1,\"lee\":0.14},\"170\":{\"speed\":2.365,\"heel\":0.1,\"lee\":0.09},\"175\":{\"speed\":2.265,\"heel\":0,\"lee\":0.04},\"180\":{\"speed\":2.18,\"heel\":0,\"lee\":0},\"45.5\":{\"speed\":3.809,\"heel\":3.5,\"lee\":2.45},\"139.7\":{\"speed\":3.83,\"heel\":1.2,\"lee\":0.66}},\"5\":{\"30\":{\"speed\":3.127,\"heel\":3.9,\"lee\":4.04},\"33\":{\"speed\":3.493,\"heel\":4.3,\"lee\":3.55},\"36\":{\"speed\":3.824,\"heel\":4.6,\"lee\":3.19},\"39\":{\"speed\":4.124,\"heel\":4.9,\"lee\":2.91},\"42\":{\"speed\":4.398,\"heel\":5.2,\"lee\":2.68},\"45\":{\"speed\":4.647,\"heel\":5.4,\"lee\":2.49},\"50\":{\"speed\":5.001,\"heel\":5.7,\"lee\":2.23},\"55\":{\"speed\":5.279,\"heel\":5.8,\"lee\":2.03},\"60\":{\"speed\":5.491,\"heel\":5.8,\"lee\":1.85},\"65\":{\"speed\":5.65,\"heel\":5.7,\"lee\":1.7},\"70\":{\"speed\":5.758,\"heel\":5.4,\"lee\":1.56},\"75\":{\"speed\":5.822,\"heel\":5,\"lee\":1.44},\"80\":{\"speed\":5.845,\"heel\":4.7,\"lee\":1.32},\"85\":{\"speed\":5.88,\"heel\":6.2,\"lee\":1.47},\"90\":{\"speed\":5.995,\"heel\":6.2,\"lee\":1.4},\"95\":{\"speed\":6.063,\"heel\":6,\"lee\":1.33},\"100\":{\"speed\":6.084,\"heel\":5.7,\"lee\":1.26},\"105\":{\"speed\":6.059,\"heel\":5,\"lee\":1.16},\"110\":{\"speed\":5.981,\"heel\":4.6,\"lee\":1.07},\"115\":{\"speed\":5.854,\"heel\":3.8,\"lee\":0.96},\"120\":{\"speed\":5.727,\"heel\":4.7,\"lee\":1.09},\"125\":{\"speed\":5.564,\"heel\":3.9,\"lee\":0.99},\"130\":{\"speed\":5.335,\"heel\":3.2,\"lee\":0.89},\"135\":{\"speed\":5.049,\"heel\":2.4,\"lee\":0.77},\"140\":{\"speed\":4.729,\"heel\":1.8,\"lee\":0.65},\"145\":{\"speed\":4.397,\"heel\":1.2,\"lee\":0.52},\"150\":{\"speed\":4.065,\"heel\":0.8,\"lee\":0.4},\"155\":{\"speed\":3.732,\"heel\":0.5,\"lee\":0.28},\"160\":{\"speed\":3.398,\"heel\":0.3,\"lee\":0.18},\"165\":{\"speed\":3.144,\"heel\":0.2,\"lee\":0.13},\"170\":{\"speed\":2.976,\"heel\":0.1,\"lee\":0.09},\"175\":{\"speed\":2.85,\"heel\":0,\"lee\":0.04},\"180\":{\"speed\":2.744,\"heel\":0,\"lee\":0},\"44.6\":{\"speed\":4.619,\"heel\":5.4,\"lee\":2.51},\"140.9\":{\"speed\":4.668,\"heel\":1.7,\"lee\":0.62}},\"6\":{\"30\":{\"speed\":3.722,\"heel\":5.7,\"lee\":4.08},\"33\":{\"speed\":4.135,\"heel\":6.2,\"lee\":3.6},\"36\":{\"speed\":4.51,\"heel\":6.8,\"lee\":3.24},\"39\":{\"speed\":4.846,\"heel\":7.2,\"lee\":2.96},\"42\":{\"speed\":5.141,\"heel\":7.6,\"lee\":2.73},\"45\":{\"speed\":5.396,\"heel\":7.9,\"lee\":2.55},\"50\":{\"speed\":5.749,\"heel\":8.2,\"lee\":2.3},\"55\":{\"speed\":6.012,\"heel\":8.2,\"lee\":2.09},\"60\":{\"speed\":6.2,\"heel\":8.1,\"lee\":1.92},\"65\":{\"speed\":6.327,\"heel\":7.8,\"lee\":1.77},\"70\":{\"speed\":6.408,\"heel\":7.3,\"lee\":1.63},\"75\":{\"speed\":6.452,\"heel\":6.8,\"lee\":1.49},\"80\":{\"speed\":6.495,\"heel\":8.9,\"lee\":1.67},\"85\":{\"speed\":6.617,\"heel\":9.1,\"lee\":1.62},\"90\":{\"speed\":6.697,\"heel\":9,\"lee\":1.55},\"95\":{\"speed\":6.736,\"heel\":8.5,\"lee\":1.46},\"100\":{\"speed\":6.738,\"heel\":7.8,\"lee\":1.35},\"105\":{\"speed\":6.702,\"heel\":7,\"lee\":1.23},\"110\":{\"speed\":6.635,\"heel\":6,\"lee\":1.1},\"115\":{\"speed\":6.576,\"heel\":7.3,\"lee\":1.27},\"120\":{\"speed\":6.488,\"heel\":6.5,\"lee\":1.15},\"125\":{\"speed\":6.344,\"heel\":5.5,\"lee\":1.02},\"130\":{\"speed\":6.139,\"heel\":4.4,\"lee\":0.89},\"135\":{\"speed\":5.87,\"heel\":3.5,\"lee\":0.77},\"140\":{\"speed\":5.555,\"heel\":2.5,\"lee\":0.64},\"145\":{\"speed\":5.209,\"heel\":1.8,\"lee\":0.52},\"150\":{\"speed\":4.843,\"heel\":1.2,\"lee\":0.39},\"155\":{\"speed\":4.461,\"heel\":0.7,\"lee\":0.28},\"160\":{\"speed\":4.074,\"heel\":0.4,\"lee\":0.18},\"165\":{\"speed\":3.777,\"heel\":0.2,\"lee\":0.13},\"170\":{\"speed\":3.579,\"heel\":0.1,\"lee\":0.09},\"175\":{\"speed\":3.43,\"heel\":0.1,\"lee\":0.04},\"180\":{\"speed\":3.304,\"heel\":0,\"lee\":0},\"43.3\":{\"speed\":5.253,\"heel\":7.7,\"lee\":2.65},\"142.9\":{\"speed\":5.356,\"heel\":2.1,\"lee\":0.57}},\"7\":{\"30\":{\"speed\":4.26,\"heel\":7.9,\"lee\":4.18},\"33\":{\"speed\":4.716,\"heel\":8.7,\"lee\":3.7},\"36\":{\"speed\":5.114,\"heel\":9.5,\"lee\":3.34},\"39\":{\"speed\":5.456,\"heel\":10.1,\"lee\":3.08},\"42\":{\"speed\":5.754,\"heel\":10.6,\"lee\":2.85},\"45\":{\"speed\":6.004,\"heel\":11,\"lee\":2.67},\"50\":{\"speed\":6.31,\"heel\":11.7,\"lee\":2.44},\"55\":{\"speed\":6.519,\"heel\":11.1,\"lee\":2.24},\"60\":{\"speed\":6.658,\"heel\":10.6,\"lee\":2.06},\"65\":{\"speed\":6.753,\"heel\":9.9,\"lee\":1.89},\"70\":{\"speed\":6.818,\"heel\":9.2,\"lee\":1.74},\"75\":{\"speed\":6.855,\"heel\":8.4,\"lee\":1.59},\"80\":{\"speed\":7.009,\"heel\":13.6,\"lee\":1.95},\"85\":{\"speed\":7.113,\"heel\":13.5,\"lee\":1.87},\"90\":{\"speed\":7.174,\"heel\":13.3,\"lee\":1.77},\"95\":{\"speed\":7.204,\"heel\":11.5,\"lee\":1.61},\"100\":{\"speed\":7.194,\"heel\":10.1,\"lee\":1.46},\"105\":{\"speed\":7.153,\"heel\":8.7,\"lee\":1.3},\"110\":{\"speed\":7.131,\"heel\":12.1,\"lee\":1.57},\"115\":{\"speed\":7.075,\"heel\":10.3,\"lee\":1.41},\"120\":{\"speed\":6.983,\"heel\":8.6,\"lee\":1.24},\"125\":{\"speed\":6.852,\"heel\":7.2,\"lee\":1.09},\"130\":{\"speed\":6.691,\"heel\":5.7,\"lee\":0.93},\"135\":{\"speed\":6.494,\"heel\":4.4,\"lee\":0.78},\"140\":{\"speed\":6.242,\"heel\":3.2,\"lee\":0.64},\"145\":{\"speed\":5.925,\"heel\":2.3,\"lee\":0.51},\"150\":{\"speed\":5.556,\"heel\":1.5,\"lee\":0.39},\"155\":{\"speed\":5.155,\"heel\":0.9,\"lee\":0.27},\"160\":{\"speed\":4.73,\"heel\":0.5,\"lee\":0.18},\"165\":{\"speed\":4.395,\"heel\":0.3,\"lee\":0.13},\"170\":{\"speed\":4.17,\"heel\":0.2,\"lee\":0.09},\"175\":{\"speed\":4,\"heel\":0.1,\"lee\":0.04},\"180\":{\"speed\":3.856,\"heel\":0,\"lee\":0},\"42.1\":{\"speed\":5.762,\"heel\":10.7,\"lee\":2.85},\"145.6\":{\"speed\":5.881,\"heel\":2.2,\"lee\":0.5}},\"8\":{\"30\":{\"speed\":4.746,\"heel\":10.9,\"lee\":4.36},\"33\":{\"speed\":5.233,\"heel\":12.2,\"lee\":3.87},\"36\":{\"speed\":5.638,\"heel\":13.4,\"lee\":3.54},\"39\":{\"speed\":5.973,\"heel\":14.5,\"lee\":3.28},\"42\":{\"speed\":6.24,\"heel\":15.3,\"lee\":3.09},\"45\":{\"speed\":6.444,\"heel\":15.6,\"lee\":2.93},\"50\":{\"speed\":6.686,\"heel\":15.7,\"lee\":2.69},\"55\":{\"speed\":6.862,\"heel\":14.9,\"lee\":2.46},\"60\":{\"speed\":6.992,\"heel\":13.9,\"lee\":2.25},\"65\":{\"speed\":7.083,\"heel\":13.3,\"lee\":2.06},\"70\":{\"speed\":7.15,\"heel\":11.6,\"lee\":1.87},\"75\":{\"speed\":7.186,\"heel\":10.4,\"lee\":1.7},\"80\":{\"speed\":7.256,\"heel\":15,\"lee\":1.98},\"85\":{\"speed\":7.371,\"heel\":15,\"lee\":1.9},\"90\":{\"speed\":7.474,\"heel\":15,\"lee\":1.81},\"95\":{\"speed\":7.566,\"heel\":15,\"lee\":1.75},\"100\":{\"speed\":7.58,\"heel\":13,\"lee\":1.57},\"105\":{\"speed\":7.54,\"heel\":10.8,\"lee\":1.38},\"110\":{\"speed\":7.473,\"heel\":9,\"lee\":1.21},\"115\":{\"speed\":7.482,\"heel\":14.2,\"lee\":1.56},\"120\":{\"speed\":7.396,\"heel\":11.1,\"lee\":1.34},\"125\":{\"speed\":7.272,\"heel\":8.8,\"lee\":1.15},\"130\":{\"speed\":7.12,\"heel\":7,\"lee\":0.98},\"135\":{\"speed\":6.941,\"heel\":5.4,\"lee\":0.82},\"140\":{\"speed\":6.734,\"heel\":4,\"lee\":0.66},\"145\":{\"speed\":6.488,\"heel\":2.9,\"lee\":0.52},\"150\":{\"speed\":6.177,\"heel\":1.9,\"lee\":0.39},\"155\":{\"speed\":5.786,\"heel\":1.2,\"lee\":0.27},\"160\":{\"speed\":5.349,\"heel\":0.6,\"lee\":0.18},\"165\":{\"speed\":4.997,\"heel\":0.4,\"lee\":0.13},\"170\":{\"speed\":4.75,\"heel\":0.2,\"lee\":0.09},\"175\":{\"speed\":4.559,\"heel\":0.1,\"lee\":0.04},\"180\":{\"speed\":4.398,\"heel\":0,\"lee\":0},\"40.4\":{\"speed\":6.104,\"heel\":14.8,\"lee\":3.19},\"148.9\":{\"speed\":6.253,\"heel\":2.1,\"lee\":0.42}},\"9\":{\"30\":{\"speed\":5.175,\"heel\":15.3,\"lee\":4.66},\"33\":{\"speed\":5.643,\"heel\":17.8,\"lee\":4.26},\"36\":{\"speed\":6.017,\"heel\":19.3,\"lee\":3.96},\"39\":{\"speed\":6.312,\"heel\":20.7,\"lee\":3.75},\"42\":{\"speed\":6.53,\"heel\":21.2,\"lee\":3.56},\"45\":{\"speed\":6.701,\"heel\":21.5,\"lee\":3.39},\"50\":{\"speed\":6.928,\"heel\":20.9,\"lee\":3.09},\"55\":{\"speed\":7.108,\"heel\":20,\"lee\":2.81},\"60\":{\"speed\":7.251,\"heel\":18.3,\"lee\":2.52},\"65\":{\"speed\":7.36,\"heel\":16.6,\"lee\":2.26},\"70\":{\"speed\":7.437,\"heel\":14.6,\"lee\":2.03},\"75\":{\"speed\":7.481,\"heel\":12.9,\"lee\":1.83},\"80\":{\"speed\":7.494,\"heel\":11.6,\"lee\":1.65},\"85\":{\"speed\":7.548,\"heel\":15,\"lee\":1.88},\"90\":{\"speed\":7.66,\"heel\":15,\"lee\":1.8},\"95\":{\"speed\":7.764,\"heel\":15,\"lee\":1.71},\"100\":{\"speed\":7.86,\"heel\":15,\"lee\":1.62},\"105\":{\"speed\":7.899,\"heel\":13.5,\"lee\":1.47},\"110\":{\"speed\":7.834,\"heel\":11,\"lee\":1.27},\"115\":{\"speed\":7.736,\"heel\":8.8,\"lee\":1.1},\"120\":{\"speed\":7.763,\"heel\":14.9,\"lee\":1.48},\"125\":{\"speed\":7.653,\"heel\":11.1,\"lee\":1.23},\"130\":{\"speed\":7.509,\"heel\":8.5,\"lee\":1.03},\"135\":{\"speed\":7.336,\"heel\":6.6,\"lee\":0.85},\"140\":{\"speed\":7.136,\"heel\":4.9,\"lee\":0.69},\"145\":{\"speed\":6.908,\"heel\":3.4,\"lee\":0.54},\"150\":{\"speed\":6.646,\"heel\":2.3,\"lee\":0.4},\"155\":{\"speed\":6.322,\"heel\":1.4,\"lee\":0.27},\"160\":{\"speed\":5.917,\"heel\":0.8,\"lee\":0.18},\"165\":{\"speed\":5.564,\"heel\":0.5,\"lee\":0.13},\"170\":{\"speed\":5.306,\"heel\":0.3,\"lee\":0.09},\"175\":{\"speed\":5.104,\"heel\":0.1,\"lee\":0.04},\"180\":{\"speed\":4.929,\"heel\":0,\"lee\":0},\"38.6\":{\"speed\":6.28,\"heel\":20.5,\"lee\":3.77},\"151.8\":{\"speed\":6.541,\"heel\":2,\"lee\":0.35}},\"10\":{\"30\":{\"speed\":5.479,\"heel\":19.5,\"lee\":4.86},\"33\":{\"speed\":5.919,\"heel\":21.2,\"lee\":4.4},\"36\":{\"speed\":6.259,\"heel\":22.3,\"lee\":4.08},\"39\":{\"speed\":6.506,\"heel\":22.6,\"lee\":3.85},\"42\":{\"speed\":6.697,\"heel\":23.5,\"lee\":3.67},\"45\":{\"speed\":6.855,\"heel\":23.6,\"lee\":3.54},\"50\":{\"speed\":7.078,\"heel\":24,\"lee\":3.35},\"55\":{\"speed\":7.269,\"heel\":24.3,\"lee\":3.18},\"60\":{\"speed\":7.436,\"heel\":23,\"lee\":2.9},\"65\":{\"speed\":7.569,\"heel\":20.9,\"lee\":2.56},\"70\":{\"speed\":7.668,\"heel\":18.6,\"lee\":2.26},\"75\":{\"speed\":7.735,\"heel\":16.1,\"lee\":1.99},\"80\":{\"speed\":7.768,\"heel\":13.7,\"lee\":1.76},\"85\":{\"speed\":7.767,\"heel\":11.7,\"lee\":1.57},\"90\":{\"speed\":7.829,\"heel\":15,\"lee\":1.78},\"95\":{\"speed\":7.948,\"heel\":15,\"lee\":1.69},\"100\":{\"speed\":8.062,\"heel\":15,\"lee\":1.58},\"105\":{\"speed\":8.171,\"heel\":15,\"lee\":1.48},\"110\":{\"speed\":8.218,\"heel\":13.6,\"lee\":1.34},\"115\":{\"speed\":8.108,\"heel\":10.7,\"lee\":1.15},\"120\":{\"speed\":7.99,\"heel\":15,\"lee\":1.45},\"125\":{\"speed\":8.029,\"heel\":14.2,\"lee\":1.33},\"130\":{\"speed\":7.88,\"heel\":10.4,\"lee\":1.09},\"135\":{\"speed\":7.702,\"heel\":7.8,\"lee\":0.89},\"140\":{\"speed\":7.504,\"heel\":5.8,\"lee\":0.72},\"145\":{\"speed\":7.279,\"heel\":4.1,\"lee\":0.55},\"150\":{\"speed\":7.023,\"heel\":2.7,\"lee\":0.41},\"155\":{\"speed\":6.73,\"heel\":1.7,\"lee\":0.28},\"160\":{\"speed\":6.398,\"heel\":1,\"lee\":0.19},\"165\":{\"speed\":6.085,\"heel\":0.6,\"lee\":0.13},\"170\":{\"speed\":5.83,\"heel\":0.4,\"lee\":0.09},\"175\":{\"speed\":5.62,\"heel\":0.2,\"lee\":0.04},\"180\":{\"speed\":5.436,\"heel\":0,\"lee\":0},\"37.2\":{\"speed\":6.369,\"heel\":22.6,\"lee\":3.97},\"153.3\":{\"speed\":6.835,\"heel\":2,\"lee\":0.32}},\"11\":{\"30\":{\"speed\":5.708,\"heel\":22.4,\"lee\":4.91},\"33\":{\"speed\":6.121,\"heel\":23.2,\"lee\":4.44},\"36\":{\"speed\":6.419,\"heel\":25.1,\"lee\":4.31},\"39\":{\"speed\":6.641,\"heel\":24.4,\"lee\":3.86},\"42\":{\"speed\":6.818,\"heel\":24.6,\"lee\":3.71},\"45\":{\"speed\":6.971,\"heel\":24.7,\"lee\":3.59},\"50\":{\"speed\":7.19,\"heel\":25.1,\"lee\":3.41},\"55\":{\"speed\":7.374,\"heel\":27.3,\"lee\":3.46},\"60\":{\"speed\":7.55,\"heel\":24.5,\"lee\":3.01},\"65\":{\"speed\":7.708,\"heel\":24.9,\"lee\":2.92},\"70\":{\"speed\":7.849,\"heel\":22.9,\"lee\":2.56},\"75\":{\"speed\":7.956,\"heel\":20,\"lee\":2.21},\"80\":{\"speed\":8.024,\"heel\":17.1,\"lee\":1.91},\"85\":{\"speed\":8.049,\"heel\":14.2,\"lee\":1.67},\"90\":{\"speed\":8.028,\"heel\":12,\"lee\":1.47},\"95\":{\"speed\":8.127,\"heel\":15,\"lee\":1.65},\"100\":{\"speed\":8.262,\"heel\":15,\"lee\":1.54},\"105\":{\"speed\":8.389,\"heel\":15,\"lee\":1.44},\"110\":{\"speed\":8.506,\"heel\":15,\"lee\":1.34},\"115\":{\"speed\":8.522,\"heel\":13.1,\"lee\":1.19},\"120\":{\"speed\":8.361,\"heel\":9.9,\"lee\":1.01},\"125\":{\"speed\":8.294,\"heel\":15,\"lee\":1.31},\"130\":{\"speed\":8.287,\"heel\":12.9,\"lee\":1.15},\"135\":{\"speed\":8.08,\"heel\":9.6,\"lee\":0.93},\"140\":{\"speed\":7.857,\"heel\":6.8,\"lee\":0.74},\"145\":{\"speed\":7.623,\"heel\":4.7,\"lee\":0.57},\"150\":{\"speed\":7.367,\"heel\":3.1,\"lee\":0.42},\"155\":{\"speed\":7.076,\"heel\":1.9,\"lee\":0.29},\"160\":{\"speed\":6.778,\"heel\":1.2,\"lee\":0.2},\"165\":{\"speed\":6.522,\"heel\":0.8,\"lee\":0.14},\"170\":{\"speed\":6.298,\"heel\":0.5,\"lee\":0.09},\"175\":{\"speed\":6.1,\"heel\":0.2,\"lee\":0.04},\"180\":{\"speed\":5.916,\"heel\":0,\"lee\":0},\"36.2\":{\"speed\":6.443,\"heel\":23.7,\"lee\":4.08},\"154.2\":{\"speed\":7.126,\"heel\":2.1,\"lee\":0.31}},\"12\":{\"30\":{\"speed\":5.884,\"heel\":23.5,\"lee\":4.91},\"33\":{\"speed\":6.266,\"heel\":24.6,\"lee\":4.46},\"36\":{\"speed\":6.538,\"heel\":24.9,\"lee\":4.16},\"39\":{\"speed\":6.743,\"heel\":25,\"lee\":3.95},\"42\":{\"speed\":6.911,\"heel\":25.7,\"lee\":3.85},\"45\":{\"speed\":7.059,\"heel\":25.9,\"lee\":3.65},\"50\":{\"speed\":7.274,\"heel\":26.1,\"lee\":3.43},\"55\":{\"speed\":7.466,\"heel\":26.8,\"lee\":3.37},\"60\":{\"speed\":7.638,\"heel\":25.3,\"lee\":3.03},\"65\":{\"speed\":7.806,\"heel\":25.3,\"lee\":2.93},\"70\":{\"speed\":7.972,\"heel\":25.7,\"lee\":2.8},\"75\":{\"speed\":8.136,\"heel\":24.5,\"lee\":2.52},\"80\":{\"speed\":8.262,\"heel\":21,\"lee\":2.12},\"85\":{\"speed\":8.331,\"heel\":17.5,\"lee\":1.8},\"90\":{\"speed\":8.341,\"heel\":14.2,\"lee\":1.54},\"95\":{\"speed\":8.302,\"heel\":15,\"lee\":1.62},\"100\":{\"speed\":8.454,\"heel\":15,\"lee\":1.51},\"105\":{\"speed\":8.596,\"heel\":15,\"lee\":1.4},\"110\":{\"speed\":8.729,\"heel\":15,\"lee\":1.3},\"115\":{\"speed\":8.852,\"heel\":15,\"lee\":1.2},\"120\":{\"speed\":8.785,\"heel\":11.9,\"lee\":1.04},\"125\":{\"speed\":8.562,\"heel\":9,\"lee\":0.87},\"130\":{\"speed\":8.627,\"heel\":15,\"lee\":1.17},\"135\":{\"speed\":8.505,\"heel\":11.7,\"lee\":0.97},\"140\":{\"speed\":8.245,\"heel\":7.9,\"lee\":0.76},\"145\":{\"speed\":7.966,\"heel\":5.5,\"lee\":0.59},\"150\":{\"speed\":7.687,\"heel\":3.6,\"lee\":0.43},\"155\":{\"speed\":7.398,\"heel\":2.2,\"lee\":0.3},\"160\":{\"speed\":7.115,\"heel\":1.5,\"lee\":0.22},\"165\":{\"speed\":6.88,\"heel\":1,\"lee\":0.15},\"170\":{\"speed\":6.683,\"heel\":0.6,\"lee\":0.1},\"175\":{\"speed\":6.51,\"heel\":0.3,\"lee\":0.05},\"180\":{\"speed\":6.343,\"heel\":0,\"lee\":0},\"35.7\":{\"speed\":6.508,\"heel\":25.1,\"lee\":4.29},\"155.4\":{\"speed\":7.371,\"heel\":2.2,\"lee\":0.29}},\"13\":{\"30\":{\"speed\":6.013,\"heel\":24.9,\"lee\":4.97},\"33\":{\"speed\":6.371,\"heel\":25.6,\"lee\":4.52},\"36\":{\"speed\":6.623,\"heel\":25.9,\"lee\":4.22},\"39\":{\"speed\":6.818,\"heel\":25.6,\"lee\":3.95},\"42\":{\"speed\":6.982,\"heel\":26.2,\"lee\":3.82},\"45\":{\"speed\":7.128,\"heel\":26.3,\"lee\":3.7},\"50\":{\"speed\":7.344,\"heel\":26.3,\"lee\":3.49},\"55\":{\"speed\":7.537,\"heel\":25.7,\"lee\":3.26},\"60\":{\"speed\":7.718,\"heel\":25.6,\"lee\":3.13},\"65\":{\"speed\":7.896,\"heel\":25.8,\"lee\":2.98},\"70\":{\"speed\":8.077,\"heel\":25.7,\"lee\":2.79},\"75\":{\"speed\":8.26,\"heel\":25.9,\"lee\":2.61},\"80\":{\"speed\":8.441,\"heel\":25.6,\"lee\":2.41},\"85\":{\"speed\":8.579,\"heel\":21.3,\"lee\":1.98},\"90\":{\"speed\":8.639,\"heel\":17.6,\"lee\":1.65},\"95\":{\"speed\":8.625,\"heel\":13.9,\"lee\":1.4},\"100\":{\"speed\":8.634,\"heel\":15,\"lee\":1.48},\"105\":{\"speed\":8.793,\"heel\":15,\"lee\":1.37},\"110\":{\"speed\":8.949,\"heel\":15,\"lee\":1.26},\"115\":{\"speed\":9.102,\"heel\":15,\"lee\":1.16},\"120\":{\"speed\":9.249,\"heel\":15,\"lee\":1.06},\"125\":{\"speed\":9.002,\"heel\":10.6,\"lee\":0.89},\"130\":{\"speed\":8.883,\"heel\":15,\"lee\":1.12},\"135\":{\"speed\":8.955,\"heel\":14,\"lee\":0.99},\"140\":{\"speed\":8.667,\"heel\":9,\"lee\":0.78},\"145\":{\"speed\":8.35,\"heel\":6.3,\"lee\":0.6},\"150\":{\"speed\":8.016,\"heel\":4.1,\"lee\":0.44},\"155\":{\"speed\":7.702,\"heel\":2.6,\"lee\":0.32},\"160\":{\"speed\":7.43,\"heel\":1.7,\"lee\":0.23},\"165\":{\"speed\":7.207,\"heel\":1.2,\"lee\":0.17},\"170\":{\"speed\":7.017,\"heel\":0.7,\"lee\":0.11},\"175\":{\"speed\":6.852,\"heel\":0.3,\"lee\":0.05},\"180\":{\"speed\":6.698,\"heel\":0,\"lee\":0},\"34.9\":{\"speed\":6.536,\"heel\":26.1,\"lee\":4.36},\"157.5\":{\"speed\":7.559,\"heel\":2.1,\"lee\":0.27}},\"14\":{\"30\":{\"speed\":6.108,\"heel\":25.7,\"lee\":4.96},\"33\":{\"speed\":6.445,\"heel\":25.2,\"lee\":4.45},\"36\":{\"speed\":6.686,\"heel\":26.8,\"lee\":4.34},\"39\":{\"speed\":6.874,\"heel\":26.7,\"lee\":4.06},\"42\":{\"speed\":7.035,\"heel\":26.8,\"lee\":3.9},\"45\":{\"speed\":7.18,\"heel\":26.6,\"lee\":3.75},\"50\":{\"speed\":7.399,\"heel\":26.7,\"lee\":3.56},\"55\":{\"speed\":7.598,\"heel\":25.5,\"lee\":3.29},\"60\":{\"speed\":7.788,\"heel\":25.6,\"lee\":3.15},\"65\":{\"speed\":7.979,\"heel\":25.4,\"lee\":2.97},\"70\":{\"speed\":8.176,\"heel\":25.9,\"lee\":2.8},\"75\":{\"speed\":8.373,\"heel\":24.8,\"lee\":2.51},\"80\":{\"speed\":8.568,\"heel\":25.9,\"lee\":2.41},\"85\":{\"speed\":8.757,\"heel\":26,\"lee\":2.24},\"90\":{\"speed\":8.907,\"heel\":21.4,\"lee\":1.8},\"95\":{\"speed\":8.952,\"heel\":16.9,\"lee\":1.47},\"100\":{\"speed\":8.891,\"heel\":13.1,\"lee\":1.24},\"105\":{\"speed\":8.99,\"heel\":15,\"lee\":1.33},\"110\":{\"speed\":9.179,\"heel\":15,\"lee\":1.22},\"115\":{\"speed\":9.366,\"heel\":15,\"lee\":1.11},\"120\":{\"speed\":9.542,\"heel\":15,\"lee\":1.01},\"125\":{\"speed\":9.544,\"heel\":14.1,\"lee\":0.9},\"130\":{\"speed\":9.177,\"heel\":9.2,\"lee\":0.75},\"135\":{\"speed\":9.31,\"heel\":15,\"lee\":0.96},\"140\":{\"speed\":9.14,\"heel\":10.7,\"lee\":0.78},\"145\":{\"speed\":8.758,\"heel\":7.3,\"lee\":0.6},\"150\":{\"speed\":8.382,\"heel\":4.6,\"lee\":0.45},\"155\":{\"speed\":8.018,\"heel\":3,\"lee\":0.33},\"160\":{\"speed\":7.731,\"heel\":2,\"lee\":0.25},\"165\":{\"speed\":7.513,\"heel\":1.4,\"lee\":0.18},\"170\":{\"speed\":7.328,\"heel\":0.8,\"lee\":0.11},\"175\":{\"speed\":7.164,\"heel\":0.4,\"lee\":0.05},\"180\":{\"speed\":7.012,\"heel\":0,\"lee\":0},\"34.5\":{\"speed\":6.576,\"heel\":26.8,\"lee\":4.46},\"153.2\":{\"speed\":8.143,\"heel\":3.5,\"lee\":0.37}},\"15\":{\"30\":{\"speed\":6.177,\"heel\":25.7,\"lee\":4.94},\"33\":{\"speed\":6.499,\"heel\":27.1,\"lee\":4.66},\"36\":{\"speed\":6.73,\"heel\":27.5,\"lee\":4.39},\"39\":{\"speed\":6.913,\"heel\":27.2,\"lee\":4.12},\"42\":{\"speed\":7.075,\"heel\":27.1,\"lee\":3.94},\"45\":{\"speed\":7.223,\"heel\":26.9,\"lee\":3.81},\"50\":{\"speed\":7.448,\"heel\":26,\"lee\":3.54},\"55\":{\"speed\":7.653,\"heel\":25.7,\"lee\":3.35},\"60\":{\"speed\":7.852,\"heel\":25.7,\"lee\":3.16},\"65\":{\"speed\":8.057,\"heel\":25.8,\"lee\":3.02},\"70\":{\"speed\":8.269,\"heel\":26,\"lee\":2.81},\"75\":{\"speed\":8.48,\"heel\":25.9,\"lee\":2.59},\"80\":{\"speed\":8.686,\"heel\":25.9,\"lee\":2.39},\"85\":{\"speed\":8.895,\"heel\":26.2,\"lee\":2.22},\"90\":{\"speed\":9.126,\"heel\":26.1,\"lee\":2.02},\"95\":{\"speed\":9.295,\"heel\":20.7,\"lee\":1.58},\"100\":{\"speed\":9.294,\"heel\":15.7,\"lee\":1.28},\"105\":{\"speed\":9.194,\"heel\":15,\"lee\":1.29},\"110\":{\"speed\":9.417,\"heel\":15,\"lee\":1.17},\"115\":{\"speed\":9.632,\"heel\":15,\"lee\":1.06},\"120\":{\"speed\":9.833,\"heel\":15,\"lee\":0.96},\"125\":{\"speed\":10.01,\"heel\":15,\"lee\":0.86},\"130\":{\"speed\":9.756,\"heel\":11,\"lee\":0.74},\"135\":{\"speed\":9.634,\"heel\":15,\"lee\":0.91},\"140\":{\"speed\":9.714,\"heel\":13.3,\"lee\":0.77},\"145\":{\"speed\":9.232,\"heel\":8.4,\"lee\":0.6},\"150\":{\"speed\":8.767,\"heel\":5.3,\"lee\":0.45},\"155\":{\"speed\":8.368,\"heel\":3.5,\"lee\":0.34},\"160\":{\"speed\":8.046,\"heel\":2.4,\"lee\":0.26},\"165\":{\"speed\":7.81,\"heel\":1.6,\"lee\":0.19},\"170\":{\"speed\":7.622,\"heel\":1,\"lee\":0.12},\"175\":{\"speed\":7.458,\"heel\":0.4,\"lee\":0.06},\"180\":{\"speed\":7.305,\"heel\":0,\"lee\":0},\"33.8\":{\"speed\":6.567,\"heel\":27.3,\"lee\":4.6},\"151.4\":{\"speed\":8.652,\"heel\":4.7,\"lee\":0.42}},\"16\":{\"30\":{\"speed\":6.224,\"heel\":27.5,\"lee\":5.22},\"33\":{\"speed\":6.534,\"heel\":27.7,\"lee\":4.74},\"36\":{\"speed\":6.759,\"heel\":27.5,\"lee\":4.42},\"39\":{\"speed\":6.943,\"heel\":27.8,\"lee\":4.25},\"42\":{\"speed\":7.109,\"heel\":26.6,\"lee\":3.97},\"45\":{\"speed\":7.26,\"heel\":26.8,\"lee\":3.86},\"50\":{\"speed\":7.489,\"heel\":26.1,\"lee\":3.63},\"55\":{\"speed\":7.701,\"heel\":25.8,\"lee\":3.4},\"60\":{\"speed\":7.911,\"heel\":25.9,\"lee\":3.23},\"65\":{\"speed\":8.129,\"heel\":25.9,\"lee\":3.03},\"70\":{\"speed\":8.354,\"heel\":26,\"lee\":2.81},\"75\":{\"speed\":8.577,\"heel\":25.9,\"lee\":2.58},\"80\":{\"speed\":8.798,\"heel\":26.1,\"lee\":2.39},\"85\":{\"speed\":9.035,\"heel\":26.3,\"lee\":2.2},\"90\":{\"speed\":9.303,\"heel\":26.5,\"lee\":2},\"95\":{\"speed\":9.583,\"heel\":26,\"lee\":1.77},\"100\":{\"speed\":9.715,\"heel\":19.5,\"lee\":1.34},\"105\":{\"speed\":9.623,\"heel\":14.2,\"lee\":1.09},\"110\":{\"speed\":9.651,\"heel\":15,\"lee\":1.13},\"115\":{\"speed\":9.893,\"heel\":15,\"lee\":1.01},\"120\":{\"speed\":10.125,\"heel\":15,\"lee\":0.91},\"125\":{\"speed\":10.331,\"heel\":15,\"lee\":0.82},\"130\":{\"speed\":10.409,\"heel\":13.7,\"lee\":0.72},\"135\":{\"speed\":9.961,\"heel\":15,\"lee\":0.85},\"140\":{\"speed\":10.186,\"heel\":15,\"lee\":0.74},\"145\":{\"speed\":9.798,\"heel\":9.9,\"lee\":0.58},\"150\":{\"speed\":9.215,\"heel\":6,\"lee\":0.45},\"155\":{\"speed\":8.736,\"heel\":4,\"lee\":0.35},\"160\":{\"speed\":8.391,\"heel\":2.8,\"lee\":0.27},\"165\":{\"speed\":8.125,\"heel\":1.9,\"lee\":0.2},\"170\":{\"speed\":7.914,\"heel\":1.1,\"lee\":0.13},\"175\":{\"speed\":7.737,\"heel\":0.6,\"lee\":0.07},\"180\":{\"speed\":7.582,\"heel\":0,\"lee\":0},\"34.1\":{\"speed\":6.624,\"heel\":28.2,\"lee\":4.69},\"145.4\":{\"speed\":9.757,\"heel\":9.5,\"lee\":0.57}},\"17\":{\"30\":{\"speed\":6.248,\"heel\":29,\"lee\":5.5},\"33\":{\"speed\":6.554,\"heel\":27.9,\"lee\":4.81},\"36\":{\"speed\":6.779,\"heel\":27.3,\"lee\":4.45},\"39\":{\"speed\":6.967,\"heel\":27.4,\"lee\":4.34},\"42\":{\"speed\":7.135,\"heel\":26,\"lee\":3.99},\"45\":{\"speed\":7.29,\"heel\":26.2,\"lee\":3.87},\"50\":{\"speed\":7.524,\"heel\":26.1,\"lee\":3.7},\"55\":{\"speed\":7.736,\"heel\":25,\"lee\":3.41},\"60\":{\"speed\":7.962,\"heel\":26,\"lee\":3.3},\"65\":{\"speed\":8.194,\"heel\":25.8,\"lee\":3.04},\"70\":{\"speed\":8.432,\"heel\":25.9,\"lee\":2.8},\"75\":{\"speed\":8.666,\"heel\":25.9,\"lee\":2.57},\"80\":{\"speed\":8.906,\"heel\":26.3,\"lee\":2.39},\"85\":{\"speed\":9.176,\"heel\":26.5,\"lee\":2.18},\"90\":{\"speed\":9.478,\"heel\":26.6,\"lee\":1.96},\"95\":{\"speed\":9.785,\"heel\":26.9,\"lee\":1.77},\"100\":{\"speed\":10.079,\"heel\":24.5,\"lee\":1.46},\"105\":{\"speed\":10.115,\"heel\":17.4,\"lee\":1.11},\"110\":{\"speed\":9.887,\"heel\":12.5,\"lee\":0.92},\"115\":{\"speed\":10.153,\"heel\":15,\"lee\":0.97},\"120\":{\"speed\":10.416,\"heel\":15,\"lee\":0.86},\"125\":{\"speed\":10.647,\"heel\":15,\"lee\":0.77},\"130\":{\"speed\":10.861,\"heel\":15,\"lee\":0.69},\"135\":{\"speed\":10.535,\"heel\":10.9,\"lee\":0.59},\"140\":{\"speed\":10.556,\"heel\":15,\"lee\":0.69},\"145\":{\"speed\":10.438,\"heel\":11.2,\"lee\":0.56},\"150\":{\"speed\":9.747,\"heel\":6.9,\"lee\":0.43},\"155\":{\"speed\":9.153,\"heel\":4.5,\"lee\":0.35},\"160\":{\"speed\":8.75,\"heel\":3.2,\"lee\":0.28},\"165\":{\"speed\":8.465,\"heel\":2.2,\"lee\":0.2},\"170\":{\"speed\":8.23,\"heel\":1.3,\"lee\":0.13},\"175\":{\"speed\":8.03,\"heel\":0.6,\"lee\":0.06},\"180\":{\"speed\":7.855,\"heel\":0,\"lee\":0},\"33.8\":{\"speed\":6.621,\"heel\":27.8,\"lee\":4.67},\"144.4\":{\"speed\":10.516,\"heel\":12,\"lee\":0.57}},\"18\":{\"30\":{\"speed\":6.258,\"heel\":28.3,\"lee\":5.42},\"33\":{\"speed\":6.566,\"heel\":28,\"lee\":4.94},\"36\":{\"speed\":6.793,\"heel\":27.1,\"lee\":4.53},\"39\":{\"speed\":6.984,\"heel\":26.6,\"lee\":4.29},\"42\":{\"speed\":7.156,\"heel\":26.7,\"lee\":4.16},\"45\":{\"speed\":7.313,\"heel\":26.1,\"lee\":3.96},\"50\":{\"speed\":7.552,\"heel\":25.9,\"lee\":3.72},\"55\":{\"speed\":7.779,\"heel\":25.7,\"lee\":3.48},\"60\":{\"speed\":8.009,\"heel\":25.8,\"lee\":3.29},\"65\":{\"speed\":8.253,\"heel\":26,\"lee\":3.06},\"70\":{\"speed\":8.502,\"heel\":25.9,\"lee\":2.81},\"75\":{\"speed\":8.748,\"heel\":26.2,\"lee\":2.6},\"80\":{\"speed\":9.011,\"heel\":26.4,\"lee\":2.38},\"85\":{\"speed\":9.316,\"heel\":26.7,\"lee\":2.16},\"90\":{\"speed\":9.645,\"heel\":26.7,\"lee\":1.92},\"95\":{\"speed\":9.982,\"heel\":26.9,\"lee\":1.71},\"100\":{\"speed\":10.325,\"heel\":27.2,\"lee\":1.52},\"105\":{\"speed\":10.577,\"heel\":22.1,\"lee\":1.17},\"110\":{\"speed\":10.455,\"heel\":15,\"lee\":0.91},\"115\":{\"speed\":10.409,\"heel\":15,\"lee\":0.93},\"120\":{\"speed\":10.699,\"heel\":15,\"lee\":0.82},\"125\":{\"speed\":10.962,\"heel\":15,\"lee\":0.73},\"130\":{\"speed\":11.213,\"heel\":15,\"lee\":0.64},\"135\":{\"speed\":11.258,\"heel\":13.3,\"lee\":0.56},\"140\":{\"speed\":10.927,\"heel\":15,\"lee\":0.64},\"145\":{\"speed\":11.129,\"heel\":13.7,\"lee\":0.53},\"150\":{\"speed\":10.342,\"heel\":7.9,\"lee\":0.41},\"155\":{\"speed\":9.645,\"heel\":5.1,\"lee\":0.34},\"160\":{\"speed\":9.155,\"heel\":3.6,\"lee\":0.28},\"165\":{\"speed\":8.818,\"heel\":2.4,\"lee\":0.21},\"170\":{\"speed\":8.563,\"heel\":1.5,\"lee\":0.14},\"175\":{\"speed\":8.344,\"heel\":0.7,\"lee\":0.07},\"180\":{\"speed\":8.145,\"heel\":0,\"lee\":0},\"33.9\":{\"speed\":6.643,\"heel\":27.9,\"lee\":4.81},\"144.7\":{\"speed\":11.178,\"heel\":14.5,\"lee\":0.54}},\"19\":{\"30\":{\"speed\":6.253,\"heel\":28.1,\"lee\":5.59},\"33\":{\"speed\":6.57,\"heel\":27.5,\"lee\":4.97},\"36\":{\"speed\":6.799,\"heel\":26.7,\"lee\":4.55},\"39\":{\"speed\":6.995,\"heel\":26.9,\"lee\":4.39},\"42\":{\"speed\":7.17,\"heel\":26.5,\"lee\":4.22},\"45\":{\"speed\":7.33,\"heel\":26.4,\"lee\":4.06},\"50\":{\"speed\":7.575,\"heel\":26.6,\"lee\":3.87},\"55\":{\"speed\":7.809,\"heel\":25.4,\"lee\":3.51},\"60\":{\"speed\":8.05,\"heel\":25.6,\"lee\":3.32},\"65\":{\"speed\":8.305,\"heel\":25.6,\"lee\":3.05},\"70\":{\"speed\":8.564,\"heel\":25.9,\"lee\":2.82},\"75\":{\"speed\":8.824,\"heel\":26.1,\"lee\":2.59},\"80\":{\"speed\":9.114,\"heel\":26.5,\"lee\":2.37},\"85\":{\"speed\":9.449,\"heel\":27.2,\"lee\":2.16},\"90\":{\"speed\":9.805,\"heel\":26.9,\"lee\":1.89},\"95\":{\"speed\":10.173,\"heel\":27.3,\"lee\":1.68},\"100\":{\"speed\":10.544,\"heel\":27.2,\"lee\":1.47},\"105\":{\"speed\":10.91,\"heel\":27,\"lee\":1.28},\"110\":{\"speed\":11.012,\"heel\":18.9,\"lee\":0.92},\"115\":{\"speed\":10.674,\"heel\":12.7,\"lee\":0.76},\"120\":{\"speed\":10.98,\"heel\":15,\"lee\":0.78},\"125\":{\"speed\":11.282,\"heel\":15,\"lee\":0.69},\"130\":{\"speed\":11.569,\"heel\":15,\"lee\":0.6},\"135\":{\"speed\":11.838,\"heel\":15,\"lee\":0.52},\"140\":{\"speed\":11.31,\"heel\":15,\"lee\":0.6},\"145\":{\"speed\":11.663,\"heel\":15,\"lee\":0.5},\"146\":{\"speed\":11.73,\"heel\":15,\"lee\":0.48},\"150\":{\"speed\":10.992,\"heel\":9.1,\"lee\":0.39},\"155\":{\"speed\":10.188,\"heel\":5.7,\"lee\":0.32},\"160\":{\"speed\":9.623,\"heel\":4,\"lee\":0.27},\"165\":{\"speed\":9.219,\"heel\":2.7,\"lee\":0.21},\"170\":{\"speed\":8.912,\"heel\":1.7,\"lee\":0.14},\"175\":{\"speed\":8.67,\"heel\":0.8,\"lee\":0.07},\"180\":{\"speed\":8.454,\"heel\":0,\"lee\":0},\"33.8\":{\"speed\":6.64,\"heel\":27.8,\"lee\":4.89}},\"20\":{\"30\":{\"speed\":6.243,\"heel\":28,\"lee\":5.61},\"33\":{\"speed\":6.566,\"heel\":28.5,\"lee\":5.25},\"36\":{\"speed\":6.801,\"heel\":26.9,\"lee\":4.72},\"39\":{\"speed\":7,\"heel\":27.2,\"lee\":4.57},\"42\":{\"speed\":7.178,\"heel\":26.7,\"lee\":4.31},\"45\":{\"speed\":7.341,\"heel\":25.7,\"lee\":4.03},\"50\":{\"speed\":7.592,\"heel\":26.3,\"lee\":3.91},\"55\":{\"speed\":7.834,\"heel\":25.8,\"lee\":3.61},\"60\":{\"speed\":8.084,\"heel\":25.6,\"lee\":3.35},\"65\":{\"speed\":8.351,\"heel\":26.2,\"lee\":3.13},\"70\":{\"speed\":8.619,\"heel\":26.1,\"lee\":2.85},\"75\":{\"speed\":8.894,\"heel\":26.3,\"lee\":2.61},\"80\":{\"speed\":9.213,\"heel\":26.5,\"lee\":2.36},\"85\":{\"speed\":9.576,\"heel\":26.8,\"lee\":2.11},\"90\":{\"speed\":9.959,\"heel\":27.1,\"lee\":1.87},\"95\":{\"speed\":10.357,\"heel\":27.3,\"lee\":1.64},\"100\":{\"speed\":10.755,\"heel\":27.4,\"lee\":1.43},\"105\":{\"speed\":11.162,\"heel\":27.7,\"lee\":1.25},\"110\":{\"speed\":11.521,\"heel\":24,\"lee\":0.97},\"115\":{\"speed\":11.331,\"heel\":15.3,\"lee\":0.74},\"120\":{\"speed\":11.262,\"heel\":15,\"lee\":0.74},\"125\":{\"speed\":11.603,\"heel\":15,\"lee\":0.65},\"130\":{\"speed\":11.928,\"heel\":15,\"lee\":0.56},\"135\":{\"speed\":12.235,\"heel\":15,\"lee\":0.48},\"140\":{\"speed\":12.073,\"heel\":12,\"lee\":0.42},\"145\":{\"speed\":12.099,\"heel\":15,\"lee\":0.45},\"150\":{\"speed\":11.723,\"heel\":10.5,\"lee\":0.36},\"155\":{\"speed\":10.778,\"heel\":6.4,\"lee\":0.3},\"160\":{\"speed\":10.133,\"heel\":4.5,\"lee\":0.26},\"165\":{\"speed\":9.673,\"heel\":3.1,\"lee\":0.2},\"170\":{\"speed\":9.315,\"heel\":1.9,\"lee\":0.14},\"175\":{\"speed\":9.02,\"heel\":0.9,\"lee\":0.07},\"180\":{\"speed\":8.773,\"heel\":0,\"lee\":0},\"34.1\":{\"speed\":6.661,\"heel\":27.5,\"lee\":4.97},\"147.3\":{\"speed\":12.285,\"heel\":15,\"lee\":0.41}},\"21\":{\"30\":{\"speed\":6.22,\"heel\":28.5,\"lee\":5.83},\"33\":{\"speed\":6.556,\"heel\":27.7,\"lee\":5.27},\"36\":{\"speed\":6.795,\"heel\":27.2,\"lee\":4.86},\"39\":{\"speed\":6.998,\"heel\":26.8,\"lee\":4.61},\"42\":{\"speed\":7.18,\"heel\":26.6,\"lee\":4.39},\"45\":{\"speed\":7.344,\"heel\":25.9,\"lee\":4.19},\"50\":{\"speed\":7.605,\"heel\":26.1,\"lee\":3.91},\"55\":{\"speed\":7.852,\"heel\":25.8,\"lee\":3.65},\"60\":{\"speed\":8.113,\"heel\":25.8,\"lee\":3.4},\"65\":{\"speed\":8.39,\"heel\":25.7,\"lee\":3.11},\"70\":{\"speed\":8.668,\"heel\":26.1,\"lee\":2.87},\"75\":{\"speed\":8.96,\"heel\":26.3,\"lee\":2.62},\"80\":{\"speed\":9.306,\"heel\":26.7,\"lee\":2.36},\"85\":{\"speed\":9.694,\"heel\":27.3,\"lee\":2.11},\"90\":{\"speed\":10.105,\"heel\":27.2,\"lee\":1.84},\"95\":{\"speed\":10.531,\"heel\":27.4,\"lee\":1.6},\"100\":{\"speed\":10.962,\"heel\":27.6,\"lee\":1.4},\"105\":{\"speed\":11.41,\"heel\":27.7,\"lee\":1.2},\"110\":{\"speed\":11.862,\"heel\":28,\"lee\":1.04},\"115\":{\"speed\":12.002,\"heel\":19.6,\"lee\":0.73},\"120\":{\"speed\":11.541,\"heel\":15,\"lee\":0.71},\"125\":{\"speed\":11.921,\"heel\":15,\"lee\":0.61},\"130\":{\"speed\":12.289,\"heel\":15,\"lee\":0.52},\"135\":{\"speed\":12.644,\"heel\":15,\"lee\":0.45},\"140\":{\"speed\":12.972,\"heel\":14.9,\"lee\":0.38},\"145\":{\"speed\":12.547,\"heel\":15,\"lee\":0.41},\"150\":{\"speed\":12.541,\"heel\":11.7,\"lee\":0.33},\"155\":{\"speed\":11.427,\"heel\":7.1,\"lee\":0.28},\"160\":{\"speed\":10.681,\"heel\":4.9,\"lee\":0.24},\"165\":{\"speed\":10.163,\"heel\":3.4,\"lee\":0.19},\"170\":{\"speed\":9.759,\"heel\":2.1,\"lee\":0.13},\"175\":{\"speed\":9.422,\"heel\":0.9,\"lee\":0.07},\"180\":{\"speed\":9.125,\"heel\":0,\"lee\":0},\"34.4\":{\"speed\":6.676,\"heel\":27.4,\"lee\":5.04},\"148.6\":{\"speed\":12.882,\"heel\":15,\"lee\":0.35}},\"22\":{\"30\":{\"speed\":6.191,\"heel\":28.2,\"lee\":6.01},\"33\":{\"speed\":6.537,\"heel\":27.9,\"lee\":5.42},\"36\":{\"speed\":6.783,\"heel\":27.2,\"lee\":4.98},\"39\":{\"speed\":6.99,\"heel\":26.6,\"lee\":4.68},\"42\":{\"speed\":7.177,\"heel\":26.6,\"lee\":4.5},\"45\":{\"speed\":7.348,\"heel\":26.5,\"lee\":4.31},\"50\":{\"speed\":7.612,\"heel\":25.8,\"lee\":3.98},\"55\":{\"speed\":7.868,\"heel\":26,\"lee\":3.74},\"60\":{\"speed\":8.137,\"heel\":25.8,\"lee\":3.45},\"65\":{\"speed\":8.422,\"heel\":26.2,\"lee\":3.19},\"70\":{\"speed\":8.709,\"heel\":26.2,\"lee\":2.89},\"75\":{\"speed\":9.02,\"heel\":26.4,\"lee\":2.63},\"80\":{\"speed\":9.393,\"heel\":26.8,\"lee\":2.36},\"85\":{\"speed\":9.804,\"heel\":27.1,\"lee\":2.08},\"90\":{\"speed\":10.243,\"heel\":27.3,\"lee\":1.81},\"95\":{\"speed\":10.695,\"heel\":27.5,\"lee\":1.57},\"100\":{\"speed\":11.164,\"heel\":27.7,\"lee\":1.36},\"105\":{\"speed\":11.653,\"heel\":28,\"lee\":1.16},\"110\":{\"speed\":12.148,\"heel\":28,\"lee\":0.98},\"115\":{\"speed\":12.597,\"heel\":24.8,\"lee\":0.75},\"120\":{\"speed\":12.251,\"heel\":14.9,\"lee\":0.57},\"125\":{\"speed\":12.238,\"heel\":15,\"lee\":0.57},\"130\":{\"speed\":12.658,\"heel\":15,\"lee\":0.49},\"135\":{\"speed\":13.077,\"heel\":15,\"lee\":0.41},\"140\":{\"speed\":13.473,\"heel\":15,\"lee\":0.34},\"145\":{\"speed\":13.021,\"heel\":15,\"lee\":0.37},\"150\":{\"speed\":13.48,\"heel\":14.4,\"lee\":0.29},\"155\":{\"speed\":12.14,\"heel\":8,\"lee\":0.25},\"160\":{\"speed\":11.272,\"heel\":5.4,\"lee\":0.22},\"165\":{\"speed\":10.685,\"heel\":3.7,\"lee\":0.18},\"170\":{\"speed\":10.236,\"heel\":2.3,\"lee\":0.13},\"175\":{\"speed\":9.856,\"heel\":1,\"lee\":0.07},\"180\":{\"speed\":9.524,\"heel\":0,\"lee\":0},\"34.6\":{\"speed\":6.673,\"heel\":27.5,\"lee\":5.12},\"149.8\":{\"speed\":13.526,\"heel\":15,\"lee\":0.3}},\"23\":{\"30\":{\"speed\":6.148,\"heel\":28.5,\"lee\":6.29},\"33\":{\"speed\":6.509,\"heel\":27.5,\"lee\":5.47},\"36\":{\"speed\":6.764,\"heel\":27.3,\"lee\":5.13},\"39\":{\"speed\":6.977,\"heel\":26.8,\"lee\":4.84},\"42\":{\"speed\":7.168,\"heel\":26.5,\"lee\":4.57},\"45\":{\"speed\":7.344,\"heel\":25.9,\"lee\":4.34},\"50\":{\"speed\":7.614,\"heel\":25.8,\"lee\":4.07},\"55\":{\"speed\":7.874,\"heel\":26.5,\"lee\":3.88},\"60\":{\"speed\":8.153,\"heel\":26.4,\"lee\":3.56},\"65\":{\"speed\":8.448,\"heel\":25.8,\"lee\":3.18},\"70\":{\"speed\":8.745,\"heel\":26.1,\"lee\":2.92},\"75\":{\"speed\":9.074,\"heel\":26.6,\"lee\":2.66},\"80\":{\"speed\":9.472,\"heel\":26.8,\"lee\":2.35},\"85\":{\"speed\":9.906,\"heel\":27,\"lee\":2.06},\"90\":{\"speed\":10.371,\"heel\":27.5,\"lee\":1.8},\"95\":{\"speed\":10.85,\"heel\":27.5,\"lee\":1.54},\"100\":{\"speed\":11.36,\"heel\":27.8,\"lee\":1.32},\"105\":{\"speed\":11.889,\"heel\":28.1,\"lee\":1.12},\"110\":{\"speed\":12.432,\"heel\":28.2,\"lee\":0.94},\"115\":{\"speed\":13.011,\"heel\":28.5,\"lee\":0.78},\"120\":{\"speed\":13.109,\"heel\":19.3,\"lee\":0.54},\"125\":{\"speed\":12.558,\"heel\":15,\"lee\":0.54},\"130\":{\"speed\":13.045,\"heel\":15,\"lee\":0.45},\"135\":{\"speed\":13.521,\"heel\":15,\"lee\":0.38},\"140\":{\"speed\":13.961,\"heel\":15,\"lee\":0.31},\"145\":{\"speed\":13.762,\"heel\":12.8,\"lee\":0.27},\"150\":{\"speed\":14.081,\"heel\":15,\"lee\":0.26},\"151\":{\"speed\":14.187,\"heel\":15,\"lee\":0.25},\"155\":{\"speed\":12.941,\"heel\":8.9,\"lee\":0.23},\"160\":{\"speed\":11.912,\"heel\":6,\"lee\":0.21},\"165\":{\"speed\":11.244,\"heel\":4,\"lee\":0.17},\"170\":{\"speed\":10.739,\"heel\":2.5,\"lee\":0.12},\"175\":{\"speed\":10.322,\"heel\":1.1,\"lee\":0.06},\"180\":{\"speed\":9.949,\"heel\":0,\"lee\":0},\"34.9\":{\"speed\":6.681,\"heel\":27.6,\"lee\":5.29}},\"24\":{\"30\":{\"speed\":6.093,\"heel\":27.9,\"lee\":6.39},\"33\":{\"speed\":6.474,\"heel\":28.2,\"lee\":5.81},\"36\":{\"speed\":6.74,\"heel\":27.2,\"lee\":5.28},\"39\":{\"speed\":6.958,\"heel\":27.2,\"lee\":4.99},\"42\":{\"speed\":7.154,\"heel\":26.2,\"lee\":4.65},\"45\":{\"speed\":7.335,\"heel\":26.3,\"lee\":4.48},\"50\":{\"speed\":7.612,\"heel\":26,\"lee\":4.15},\"55\":{\"speed\":7.877,\"heel\":26.2,\"lee\":3.93},\"60\":{\"speed\":8.166,\"heel\":26,\"lee\":3.57},\"65\":{\"speed\":8.462,\"heel\":26.4,\"lee\":3.25},\"70\":{\"speed\":8.774,\"heel\":26.2,\"lee\":2.95},\"75\":{\"speed\":9.122,\"heel\":26.8,\"lee\":2.69},\"80\":{\"speed\":9.542,\"heel\":26.9,\"lee\":2.36},\"85\":{\"speed\":9.999,\"heel\":27.2,\"lee\":2.06},\"90\":{\"speed\":10.488,\"heel\":27.5,\"lee\":1.78},\"95\":{\"speed\":10.998,\"heel\":27.7,\"lee\":1.52},\"100\":{\"speed\":11.546,\"heel\":28.3,\"lee\":1.3},\"105\":{\"speed\":12.118,\"heel\":28.2,\"lee\":1.08},\"110\":{\"speed\":12.722,\"heel\":28.6,\"lee\":0.9},\"115\":{\"speed\":13.373,\"heel\":28.8,\"lee\":0.74},\"120\":{\"speed\":13.912,\"heel\":24.8,\"lee\":0.54},\"125\":{\"speed\":13.169,\"heel\":13.9,\"lee\":0.43},\"130\":{\"speed\":13.438,\"heel\":15,\"lee\":0.42},\"135\":{\"speed\":13.962,\"heel\":15,\"lee\":0.34},\"140\":{\"speed\":14.449,\"heel\":15,\"lee\":0.28},\"145\":{\"speed\":14.812,\"heel\":14.5,\"lee\":0.23},\"150\":{\"speed\":14.618,\"heel\":15,\"lee\":0.24},\"152\":{\"speed\":14.854,\"heel\":15,\"lee\":0.21},\"155\":{\"speed\":13.845,\"heel\":10,\"lee\":0.2},\"160\":{\"speed\":12.605,\"heel\":6.5,\"lee\":0.19},\"165\":{\"speed\":11.845,\"heel\":4.4,\"lee\":0.16},\"170\":{\"speed\":11.277,\"heel\":2.7,\"lee\":0.11},\"175\":{\"speed\":10.79,\"heel\":1.8,\"lee\":0.09},\"180\":{\"speed\":10.404,\"heel\":0,\"lee\":0},\"35.3\":{\"speed\":6.683,\"heel\":27.4,\"lee\":5.36}},\"25\":{\"30\":{\"speed\":6.023,\"heel\":27.7,\"lee\":6.6},\"33\":{\"speed\":6.429,\"heel\":27.7,\"lee\":5.95},\"36\":{\"speed\":6.708,\"heel\":27.4,\"lee\":5.44},\"39\":{\"speed\":6.934,\"heel\":26.9,\"lee\":5.08},\"42\":{\"speed\":7.135,\"heel\":26.5,\"lee\":4.8},\"45\":{\"speed\":7.32,\"heel\":26.2,\"lee\":4.56},\"50\":{\"speed\":7.605,\"heel\":26.1,\"lee\":4.21},\"55\":{\"speed\":7.879,\"heel\":25.8,\"lee\":3.89},\"60\":{\"speed\":8.171,\"heel\":25.9,\"lee\":3.61},\"65\":{\"speed\":8.482,\"heel\":26.1,\"lee\":3.3},\"70\":{\"speed\":8.798,\"heel\":26.3,\"lee\":2.99},\"75\":{\"speed\":9.163,\"heel\":26.4,\"lee\":2.67},\"80\":{\"speed\":9.603,\"heel\":26.9,\"lee\":2.36},\"85\":{\"speed\":10.082,\"heel\":27.4,\"lee\":2.06},\"90\":{\"speed\":10.594,\"heel\":27.7,\"lee\":1.77},\"95\":{\"speed\":11.137,\"heel\":27.8,\"lee\":1.5},\"100\":{\"speed\":11.723,\"heel\":28.1,\"lee\":1.26},\"105\":{\"speed\":12.341,\"heel\":28.5,\"lee\":1.05},\"110\":{\"speed\":13.018,\"heel\":29,\"lee\":0.87},\"115\":{\"speed\":13.727,\"heel\":29.2,\"lee\":0.7},\"120\":{\"speed\":14.414,\"heel\":29.5,\"lee\":0.57},\"125\":{\"speed\":14.226,\"heel\":17.9,\"lee\":0.38},\"130\":{\"speed\":13.826,\"heel\":15,\"lee\":0.39},\"135\":{\"speed\":14.402,\"heel\":15,\"lee\":0.31},\"140\":{\"speed\":14.931,\"heel\":15,\"lee\":0.26},\"145\":{\"speed\":15.414,\"heel\":15,\"lee\":0.21},\"150\":{\"speed\":15.155,\"heel\":15,\"lee\":0.21},\"153\":{\"speed\":15.527,\"heel\":15,\"lee\":0.18},\"155\":{\"speed\":14.797,\"heel\":11.3,\"lee\":0.17},\"160\":{\"speed\":13.38,\"heel\":7,\"lee\":0.16},\"165\":{\"speed\":12.487,\"heel\":4.8,\"lee\":0.14},\"170\":{\"speed\":11.852,\"heel\":2.9,\"lee\":0.1},\"175\":{\"speed\":11.333,\"heel\":1.3,\"lee\":0.05},\"180\":{\"speed\":10.219,\"heel\":0,\"lee\":0},\"35.6\":{\"speed\":6.674,\"heel\":27.1,\"lee\":5.45}},\"26\":{\"30\":{\"speed\":5.942,\"heel\":27.8,\"lee\":6.97},\"33\":{\"speed\":6.375,\"heel\":27.9,\"lee\":6.15},\"36\":{\"speed\":6.669,\"heel\":27.2,\"lee\":5.58},\"39\":{\"speed\":6.903,\"heel\":26.5,\"lee\":5.19},\"42\":{\"speed\":7.109,\"heel\":26,\"lee\":4.85},\"45\":{\"speed\":7.301,\"heel\":26.7,\"lee\":4.73},\"50\":{\"speed\":7.589,\"heel\":26.1,\"lee\":4.3},\"55\":{\"speed\":7.873,\"heel\":25.7,\"lee\":3.96},\"60\":{\"speed\":8.171,\"heel\":26,\"lee\":3.69},\"65\":{\"speed\":8.489,\"heel\":25.9,\"lee\":3.32},\"70\":{\"speed\":8.815,\"heel\":26.2,\"lee\":3.02},\"75\":{\"speed\":9.197,\"heel\":26.9,\"lee\":2.74},\"80\":{\"speed\":9.655,\"heel\":27.3,\"lee\":2.4},\"85\":{\"speed\":10.156,\"heel\":27.3,\"lee\":2.06},\"90\":{\"speed\":10.69,\"heel\":27.7,\"lee\":1.76},\"95\":{\"speed\":11.266,\"heel\":28,\"lee\":1.49},\"100\":{\"speed\":11.889,\"heel\":28.3,\"lee\":1.24},\"105\":{\"speed\":12.558,\"heel\":28.9,\"lee\":1.03},\"110\":{\"speed\":13.31,\"heel\":28.8,\"lee\":0.82},\"115\":{\"speed\":14.075,\"heel\":29.4,\"lee\":0.66},\"120\":{\"speed\":14.812,\"heel\":29.8,\"lee\":0.53},\"125\":{\"speed\":15.191,\"heel\":22.8,\"lee\":0.36},\"130\":{\"speed\":14.21,\"heel\":15,\"lee\":0.36},\"135\":{\"speed\":14.833,\"heel\":15,\"lee\":0.29},\"140\":{\"speed\":15.411,\"heel\":15,\"lee\":0.23},\"145\":{\"speed\":15.93,\"heel\":15,\"lee\":0.19},\"150\":{\"speed\":15.69,\"heel\":15,\"lee\":0.19},\"155\":{\"speed\":15.793,\"heel\":12.2,\"lee\":0.15},\"160\":{\"speed\":14.2,\"heel\":7.6,\"lee\":0.14},\"165\":{\"speed\":13.194,\"heel\":5.1,\"lee\":0.13},\"170\":{\"speed\":12.461,\"heel\":3.1,\"lee\":0.09},\"175\":{\"speed\":11.887,\"heel\":1.4,\"lee\":0.05},\"180\":{\"speed\":11.387,\"heel\":0,\"lee\":0},\"36.1\":{\"speed\":6.675,\"heel\":27.4,\"lee\":5.61},\"153.9\":{\"speed\":16.195,\"heel\":15,\"lee\":0.15}},\"27\":{\"30\":{\"speed\":5.847,\"heel\":28.1,\"lee\":7.39},\"33\":{\"speed\":6.307,\"heel\":27.4,\"lee\":6.27},\"36\":{\"speed\":6.622,\"heel\":27.4,\"lee\":5.79},\"39\":{\"speed\":6.866,\"heel\":26.9,\"lee\":5.4},\"42\":{\"speed\":7.079,\"heel\":26.4,\"lee\":5.02},\"45\":{\"speed\":7.276,\"heel\":26.1,\"lee\":4.76},\"50\":{\"speed\":7.576,\"heel\":26.2,\"lee\":4.43},\"55\":{\"speed\":7.862,\"heel\":25.9,\"lee\":4.09},\"60\":{\"speed\":8.165,\"heel\":25.8,\"lee\":3.71},\"65\":{\"speed\":8.49,\"heel\":26.9,\"lee\":3.49},\"70\":{\"speed\":8.825,\"heel\":26.4,\"lee\":3.08},\"75\":{\"speed\":9.224,\"heel\":26.9,\"lee\":2.76},\"80\":{\"speed\":9.699,\"heel\":27.2,\"lee\":2.41},\"85\":{\"speed\":10.22,\"heel\":27.7,\"lee\":2.08},\"90\":{\"speed\":10.776,\"heel\":27.8,\"lee\":1.76},\"95\":{\"speed\":11.385,\"heel\":28.2,\"lee\":1.48},\"100\":{\"speed\":12.045,\"heel\":28.5,\"lee\":1.22},\"105\":{\"speed\":12.772,\"heel\":28.9,\"lee\":1},\"110\":{\"speed\":13.588,\"heel\":30,\"lee\":0.81},\"115\":{\"speed\":14.41,\"heel\":29.4,\"lee\":0.62},\"120\":{\"speed\":15.201,\"heel\":30,\"lee\":0.5},\"125\":{\"speed\":15.885,\"heel\":28.7,\"lee\":0.38},\"130\":{\"speed\":15.113,\"heel\":15.2,\"lee\":0.28},\"135\":{\"speed\":15.259,\"heel\":15,\"lee\":0.27},\"140\":{\"speed\":15.881,\"heel\":15,\"lee\":0.21},\"145\":{\"speed\":16.432,\"heel\":15,\"lee\":0.17},\"150\":{\"speed\":16.305,\"heel\":13.1,\"lee\":0.15},\"155\":{\"speed\":16.773,\"heel\":14.3,\"lee\":0.13},\"160\":{\"speed\":15.048,\"heel\":8.2,\"lee\":0.12},\"165\":{\"speed\":13.941,\"heel\":5.5,\"lee\":0.11},\"170\":{\"speed\":13.127,\"heel\":3.3,\"lee\":0.08},\"175\":{\"speed\":12.474,\"heel\":1.5,\"lee\":0.05},\"180\":{\"speed\":11.923,\"heel\":0,\"lee\":0},\"36.4\":{\"speed\":6.66,\"heel\":27.4,\"lee\":5.77},\"154.8\":{\"speed\":16.847,\"heel\":15,\"lee\":0.13}},\"28\":{\"30\":{\"speed\":5.73,\"heel\":27.7,\"lee\":7.79},\"33\":{\"speed\":6.225,\"heel\":27.6,\"lee\":6.66},\"36\":{\"speed\":6.566,\"heel\":27.1,\"lee\":5.97},\"39\":{\"speed\":6.822,\"heel\":26.7,\"lee\":5.51},\"42\":{\"speed\":7.043,\"heel\":26.3,\"lee\":5.16},\"45\":{\"speed\":7.246,\"heel\":26.7,\"lee\":4.97},\"50\":{\"speed\":7.555,\"heel\":26.2,\"lee\":4.53},\"55\":{\"speed\":7.844,\"heel\":26,\"lee\":4.14},\"60\":{\"speed\":8.154,\"heel\":25.9,\"lee\":3.82},\"65\":{\"speed\":8.486,\"heel\":26.2,\"lee\":3.46},\"70\":{\"speed\":8.829,\"heel\":26.4,\"lee\":3.14},\"75\":{\"speed\":9.242,\"heel\":26.9,\"lee\":2.8},\"80\":{\"speed\":9.732,\"heel\":27.4,\"lee\":2.44},\"85\":{\"speed\":10.273,\"heel\":27.4,\"lee\":2.07},\"90\":{\"speed\":10.851,\"heel\":28,\"lee\":1.77},\"95\":{\"speed\":11.492,\"heel\":28.5,\"lee\":1.48},\"100\":{\"speed\":12.19,\"heel\":28.7,\"lee\":1.21},\"105\":{\"speed\":12.982,\"heel\":29.1,\"lee\":0.97},\"110\":{\"speed\":13.858,\"heel\":29.5,\"lee\":0.76},\"115\":{\"speed\":14.732,\"heel\":29.7,\"lee\":0.59},\"120\":{\"speed\":15.577,\"heel\":30.1,\"lee\":0.47},\"125\":{\"speed\":16.308,\"heel\":30.5,\"lee\":0.38},\"130\":{\"speed\":16.191,\"heel\":19.1,\"lee\":0.25},\"135\":{\"speed\":15.675,\"heel\":15,\"lee\":0.25},\"140\":{\"speed\":16.334,\"heel\":15,\"lee\":0.2},\"145\":{\"speed\":16.918,\"heel\":15,\"lee\":0.16},\"150\":{\"speed\":17.304,\"heel\":14.3,\"lee\":0.13},\"155\":{\"speed\":17.41,\"heel\":15,\"lee\":0.12},\"160\":{\"speed\":15.917,\"heel\":8.9,\"lee\":0.11},\"165\":{\"speed\":14.711,\"heel\":5.8,\"lee\":0.1},\"170\":{\"speed\":13.829,\"heel\":3.5,\"lee\":0.07},\"175\":{\"speed\":13.112,\"heel\":1.6,\"lee\":0.04},\"180\":{\"speed\":11.624,\"heel\":0,\"lee\":0},\"36.8\":{\"speed\":6.642,\"heel\":26.9,\"lee\":5.76},\"155.6\":{\"speed\":17.488,\"heel\":15,\"lee\":0.11}},\"29\":{\"30\":{\"speed\":5.591,\"heel\":27.4,\"lee\":8.24},\"33\":{\"speed\":6.125,\"heel\":27.6,\"lee\":7.01},\"36\":{\"speed\":6.498,\"heel\":27.1,\"lee\":6.22},\"39\":{\"speed\":6.77,\"heel\":26.3,\"lee\":5.66},\"42\":{\"speed\":7,\"heel\":26.8,\"lee\":5.42},\"45\":{\"speed\":7.21,\"heel\":26.3,\"lee\":5.05},\"50\":{\"speed\":7.528,\"heel\":26,\"lee\":4.63},\"55\":{\"speed\":7.825,\"heel\":25.9,\"lee\":4.23},\"60\":{\"speed\":8.138,\"heel\":26,\"lee\":3.9},\"65\":{\"speed\":8.476,\"heel\":26.2,\"lee\":3.54},\"70\":{\"speed\":8.826,\"heel\":27,\"lee\":3.24},\"75\":{\"speed\":9.252,\"heel\":27,\"lee\":2.84},\"80\":{\"speed\":9.757,\"heel\":27.4,\"lee\":2.46},\"85\":{\"speed\":10.315,\"heel\":27.7,\"lee\":2.1},\"90\":{\"speed\":10.915,\"heel\":28.1,\"lee\":1.77},\"95\":{\"speed\":11.587,\"heel\":28.4,\"lee\":1.46},\"100\":{\"speed\":12.324,\"heel\":28.8,\"lee\":1.19},\"105\":{\"speed\":13.181,\"heel\":29.4,\"lee\":0.95},\"110\":{\"speed\":14.112,\"heel\":29.8,\"lee\":0.73},\"115\":{\"speed\":15.044,\"heel\":30.1,\"lee\":0.57},\"120\":{\"speed\":15.937,\"heel\":30.2,\"lee\":0.44},\"125\":{\"speed\":16.7,\"heel\":30.7,\"lee\":0.35},\"130\":{\"speed\":17.103,\"heel\":23.6,\"lee\":0.24},\"135\":{\"speed\":16.076,\"heel\":15,\"lee\":0.23},\"140\":{\"speed\":16.771,\"heel\":15,\"lee\":0.18},\"145\":{\"speed\":17.392,\"heel\":15,\"lee\":0.14},\"150\":{\"speed\":17.938,\"heel\":15,\"lee\":0.11},\"155\":{\"speed\":17.942,\"heel\":15,\"lee\":0.11},\"160\":{\"speed\":16.784,\"heel\":9.6,\"lee\":0.09},\"165\":{\"speed\":15.497,\"heel\":6.2,\"lee\":0.08},\"170\":{\"speed\":14.55,\"heel\":3.8,\"lee\":0.07},\"175\":{\"speed\":13.783,\"heel\":1.7,\"lee\":0.04},\"180\":{\"speed\":12.147,\"heel\":0,\"lee\":0},\"37.8\":{\"speed\":6.666,\"heel\":27,\"lee\":5.93},\"156.4\":{\"speed\":18.123,\"heel\":15,\"lee\":0.1}},\"30\":{\"30\":{\"speed\":5.428,\"heel\":27.1,\"lee\":8.83},\"33\":{\"speed\":6.003,\"heel\":27.7,\"lee\":7.43},\"36\":{\"speed\":6.42,\"heel\":27.2,\"lee\":6.5},\"38\":{\"speed\":6.62,\"heel\":27.3,\"lee\":6.11},\"39\":{\"speed\":6.711,\"heel\":26.9,\"lee\":5.94},\"42\":{\"speed\":6.95,\"heel\":26.6,\"lee\":5.55},\"45\":{\"speed\":7.168,\"heel\":26.6,\"lee\":5.25},\"50\":{\"speed\":7.497,\"heel\":26.1,\"lee\":4.74},\"55\":{\"speed\":7.798,\"heel\":25.8,\"lee\":4.3},\"60\":{\"speed\":8.115,\"heel\":26.3,\"lee\":4.03},\"65\":{\"speed\":8.459,\"heel\":26.3,\"lee\":3.62},\"70\":{\"speed\":8.817,\"heel\":26.2,\"lee\":3.22},\"75\":{\"speed\":9.254,\"heel\":26.9,\"lee\":2.88},\"80\":{\"speed\":9.77,\"heel\":27.9,\"lee\":2.54},\"85\":{\"speed\":10.346,\"heel\":27.8,\"lee\":2.13},\"90\":{\"speed\":10.968,\"heel\":28,\"lee\":1.78},\"95\":{\"speed\":11.669,\"heel\":28.7,\"lee\":1.48},\"100\":{\"speed\":12.446,\"heel\":28.9,\"lee\":1.18},\"105\":{\"speed\":13.364,\"heel\":29.4,\"lee\":0.92},\"110\":{\"speed\":14.349,\"heel\":30,\"lee\":0.71},\"115\":{\"speed\":15.338,\"heel\":30.3,\"lee\":0.54},\"120\":{\"speed\":16.276,\"heel\":30.6,\"lee\":0.42},\"125\":{\"speed\":17.075,\"heel\":30.8,\"lee\":0.33},\"130\":{\"speed\":17.768,\"heel\":29,\"lee\":0.25},\"135\":{\"speed\":16.788,\"heel\":14.9,\"lee\":0.18},\"140\":{\"speed\":17.194,\"heel\":15,\"lee\":0.17},\"145\":{\"speed\":17.855,\"heel\":15,\"lee\":0.13},\"150\":{\"speed\":18.44,\"heel\":15,\"lee\":0.1},\"155\":{\"speed\":18.469,\"heel\":15,\"lee\":0.1},\"160\":{\"speed\":17.653,\"heel\":9.9,\"lee\":0.08},\"165\":{\"speed\":16.288,\"heel\":6.6,\"lee\":0.07},\"170\":{\"speed\":15.286,\"heel\":4,\"lee\":0.06},\"175\":{\"speed\":14.471,\"heel\":1.8,\"lee\":0.03},\"180\":{\"speed\":12.705,\"heel\":0,\"lee\":0},\"157.1\":{\"speed\":18.755,\"heel\":15,\"lee\":0.08}},\"35\":{\"30\":{\"speed\":0,\"heel\":0,\"lee\":0},\"33\":{\"speed\":4.987,\"heel\":26.2,\"lee\":11.25},\"36\":{\"speed\":5.687,\"heel\":26.4,\"lee\":8.84},\"39\":{\"speed\":6.201,\"heel\":26.8,\"lee\":7.54},\"42\":{\"speed\":6.571,\"heel\":26.5,\"lee\":6.69},\"45\":{\"speed\":6.849,\"heel\":26.3,\"lee\":6.14},\"50\":{\"speed\":7.245,\"heel\":26.3,\"lee\":5.52},\"55\":{\"speed\":7.593,\"heel\":26.1,\"lee\":4.97},\"60\":{\"speed\":7.923,\"heel\":26.3,\"lee\":4.54},\"65\":{\"speed\":8.285,\"heel\":26.3,\"lee\":4.07},\"70\":{\"speed\":8.677,\"heel\":26.2,\"lee\":3.6},\"75\":{\"speed\":9.133,\"heel\":27.3,\"lee\":3.25},\"80\":{\"speed\":9.692,\"heel\":28.3,\"lee\":2.84},\"85\":{\"speed\":10.33,\"heel\":28.3,\"lee\":2.35},\"90\":{\"speed\":11.041,\"heel\":28.8,\"lee\":1.94},\"95\":{\"speed\":11.868,\"heel\":29.3,\"lee\":1.56},\"100\":{\"speed\":12.842,\"heel\":30,\"lee\":1.21},\"105\":{\"speed\":14.026,\"heel\":30.4,\"lee\":0.88},\"110\":{\"speed\":15.282,\"heel\":31.1,\"lee\":0.64},\"115\":{\"speed\":16.524,\"heel\":31.4,\"lee\":0.47},\"120\":{\"speed\":17.684,\"heel\":31.4,\"lee\":0.34},\"125\":{\"speed\":18.721,\"heel\":31.6,\"lee\":0.26},\"130\":{\"speed\":19.527,\"heel\":31.4,\"lee\":0.2},\"135\":{\"speed\":20.161,\"heel\":31.6,\"lee\":0.17},\"140\":{\"speed\":19.115,\"heel\":15,\"lee\":0.12},\"145\":{\"speed\":19.859,\"heel\":15,\"lee\":0.09},\"150\":{\"speed\":20.478,\"heel\":15,\"lee\":0.07},\"155\":{\"speed\":21.016,\"heel\":15,\"lee\":0.06},\"160\":{\"speed\":21.226,\"heel\":15,\"lee\":0.05},\"165\":{\"speed\":20.074,\"heel\":9.1,\"lee\":0.04},\"170\":{\"speed\":18.966,\"heel\":5.2,\"lee\":0.03},\"175\":{\"speed\":17.984,\"heel\":2.3,\"lee\":0.02},\"180\":{\"speed\":15.891,\"heel\":0,\"lee\":0},\"160.5\":{\"speed\":21.285,\"heel\":15,\"lee\":0.05}}};\nvar mayhem_targets = {\"up\":{\"4\":{\"twa\":45.5,\"speed\":3.809,\"heel\":3.5},\"5\":{\"twa\":44.6,\"speed\":4.619,\"heel\":5.4},\"6\":{\"twa\":43.3,\"speed\":5.253,\"heel\":7.7},\"7\":{\"twa\":42.1,\"speed\":5.762,\"heel\":10.7},\"8\":{\"twa\":40.4,\"speed\":6.104,\"heel\":14.8},\"9\":{\"twa\":38.6,\"speed\":6.28,\"heel\":20.5},\"10\":{\"twa\":37.2,\"speed\":6.369,\"heel\":22.6},\"11\":{\"twa\":36.2,\"speed\":6.443,\"heel\":23.7},\"12\":{\"twa\":35.7,\"speed\":6.508,\"heel\":25.1},\"13\":{\"twa\":34.9,\"speed\":6.536,\"heel\":26.1},\"14\":{\"twa\":34.5,\"speed\":6.576,\"heel\":26.8},\"15\":{\"twa\":33.8,\"speed\":6.567,\"heel\":27.3},\"16\":{\"twa\":34.1,\"speed\":6.624,\"heel\":28.2},\"17\":{\"twa\":33.8,\"speed\":6.621,\"heel\":27.8},\"18\":{\"twa\":33.9,\"speed\":6.643,\"heel\":27.9},\"19\":{\"twa\":33.8,\"speed\":6.64,\"heel\":27.8},\"20\":{\"twa\":34.1,\"speed\":6.661,\"heel\":27.5},\"21\":{\"twa\":34.4,\"speed\":6.676,\"heel\":27.4},\"22\":{\"twa\":34.6,\"speed\":6.673,\"heel\":27.5},\"23\":{\"twa\":34.9,\"speed\":6.681,\"heel\":27.6},\"24\":{\"twa\":35.3,\"speed\":6.683,\"heel\":27.4},\"25\":{\"twa\":35.6,\"speed\":6.674,\"heel\":27.1},\"26\":{\"twa\":36.1,\"speed\":6.675,\"heel\":27.4},\"27\":{\"twa\":36.4,\"speed\":6.66,\"heel\":27.4},\"28\":{\"twa\":36.8,\"speed\":6.642,\"heel\":26.9},\"29\":{\"twa\":37.8,\"speed\":6.666,\"heel\":27},\"30\":{\"twa\":38,\"speed\":6.62,\"heel\":27.3},\"35\":{\"twa\":42,\"speed\":6.571,\"heel\":26.5}},\"down\":{\"4\":{\"twa\":139.7,\"speed\":3.83,\"heel\":1.2},\"5\":{\"twa\":140.9,\"speed\":4.668,\"heel\":1.7},\"6\":{\"twa\":142.9,\"speed\":5.356,\"heel\":2.1},\"7\":{\"twa\":145.6,\"speed\":5.881,\"heel\":2.2},\"8\":{\"twa\":148.9,\"speed\":6.253,\"heel\":2.1},\"9\":{\"twa\":151.8,\"speed\":6.541,\"heel\":2},\"10\":{\"twa\":153.3,\"speed\":6.835,\"heel\":2},\"11\":{\"twa\":154.2,\"speed\":7.126,\"heel\":2.1},\"12\":{\"twa\":155.4,\"speed\":7.371,\"heel\":2.2},\"13\":{\"twa\":157.5,\"speed\":7.559,\"heel\":2.1},\"14\":{\"twa\":153.2,\"speed\":8.143,\"heel\":3.5},\"15\":{\"twa\":151.4,\"speed\":8.652,\"heel\":4.7},\"16\":{\"twa\":145.4,\"speed\":9.757,\"heel\":9.5},\"17\":{\"twa\":144.4,\"speed\":10.516,\"heel\":12},\"18\":{\"twa\":144.7,\"speed\":11.178,\"heel\":14.5},\"19\":{\"twa\":146,\"speed\":11.73,\"heel\":15},\"20\":{\"twa\":147.3,\"speed\":12.285,\"heel\":15},\"21\":{\"twa\":148.6,\"speed\":12.882,\"heel\":15},\"22\":{\"twa\":149.8,\"speed\":13.526,\"heel\":15},\"23\":{\"twa\":151,\"speed\":14.187,\"heel\":15},\"24\":{\"twa\":152,\"speed\":14.854,\"heel\":15},\"25\":{\"twa\":153,\"speed\":15.527,\"heel\":15},\"26\":{\"twa\":153.9,\"speed\":16.195,\"heel\":15},\"27\":{\"twa\":154.8,\"speed\":16.847,\"heel\":15},\"28\":{\"twa\":155.6,\"speed\":17.488,\"heel\":15},\"29\":{\"twa\":156.4,\"speed\":18.123,\"heel\":15},\"30\":{\"twa\":157.1,\"speed\":18.755,\"heel\":15},\"35\":{\"twa\":160.5,\"speed\":21.285,\"heel\":15}}}","\nvar BOARD_COLORS = {\n    'D-P': '#F2E9E9',\n    'D-S': '#E9F2E9',\n    'U-S': '#F5FFF5',\n    'U-P': '#FFF5F5',\n    'PS': '#fcfcfc'\n}\n   \nvar graphView = Backbone.View.extend({\n    tagName: 'div',\n    className: \"graph\",\n    initialize: function(options, options2) {\n        this.allData = options.race.data;\n\n        //TODO: config has series, colors, rolling?\n        this.data = _.map( options.series, function(series) { return {metric: series, data: select2(options.race.data, series) }} );\n\n        this.showX = options2? options2.showX: false;\n        this.invertY = options2? options2.invertY: false;\n        if ( options2 && options2.rangeY ) {\n            this.rangeY = options2.rangeY;\n        }\n\n        //set up background color blocks\n        var max_time = options.race.data[options.race.data.length-1].t;\n        \n        this.maneuvers = options.race.maneuvers;\n        _.each(this.maneuvers, function(m) {\n            m.color = BOARD_COLORS[m.board];\n        })\n        this.legs = [];\n\n        for (var i=0; i < options.race.maneuvers.length-1; i++ ) {\n            //mark changes from UW to DW\n            if ( options.race.maneuvers[i].board.charAt(0) != options.race.maneuvers[i+1].board.charAt(0) ) {\n                this.legs.push({\n                    leg: this.legs.length+2,\n                    start: options.race.maneuvers[i+1].start\n                });\n            }\n        }\n\n        // console.info(this.legs);\n    },\n    render: function() {\n        var view = this;\n        \n        var margin = {top: 5, right: 10, bottom: 5, left: 50};\n\n        if ( this.showX ) {\n            margin.top = 30;\n        }\n\n        var width = this.$el.width() - margin.left - margin.right,\n            height = this.$el.height() - margin.top - margin.bottom;\n\n        var zoom = false;\n\n        var allTimeRange = d3.extent(this.data[0].data, function(d) { return d[0]; });\n        var x = this.x = d3.scale.linear()\n            .range([0, width])\n            .domain(allTimeRange);\n\n        var y = d3.scale.linear()\n            .range([height, 0])\n            .domain([\n                d3.min( view.data, function(series) { return d3.min(series.data, function(d) { return d[1]}) } ),\n                d3.max( view.data, function(series) { return d3.max(series.data, function(d) { return d[1]}) } ),\n            ]);\n\n        if ( this.rangeY ) {\n            y.domain(this.rangeY);\n        }\n\n        if ( this.invertY ) {\n            y.domain( [y.domain()[1], y.domain()[0]] );\n        }\n\n        var color = d3.scale.category10();\n        color.domain( _.map(this.data, function(series) { return series.metric; }) );\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"top\")\n            .tickValues(_.pluck(this.legs, 'start'))\n            .tickFormat(function(d) { return moment(d).format(\"h:mm\"); })\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\")\n            .ticks(3)\n\n        var line = d3.svg.line()\n            .interpolate(\"linear\")\n            .x(function(d) { return x(d[0]); })\n            .y(function(d) { return y(d[1]); });\n\n\n        var svg = this.svg = d3.select(this.el).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n        //TODO: 2: zoom\n        //TODO: 4: axis labels\n        //TODO: 5: zoom 1 graph. then all graphs\n\n        // draw colored background, for stb vs port\n        svg.append(\"g\")\n            .attr(\"class\", \"boards\")\n            .selectAll(\"rect.board\")\n                .data(this.maneuvers)\n            .enter().append(\"rect\")\n                .attr('class', 'board')\n                .attr(\"x\", function(d) { return x(d.start); })\n                .attr(\"width\", function(d) { return x(d.end) - x(d.start); })\n                .attr(\"y\", 0)\n                .attr(\"height\", height)\n                .attr(\"fill\", function(d) { return d.color });\n\n\n        //draw y grid and axis\n        svg.append(\"g\")         \n            .attr(\"class\", \"grid\")\n            .call( d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .ticks(height/30)\n                .tickSize(-width, 0, 0)\n                .tickFormat(\"\")\n            )\n\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis)\n          .append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            // .text(\"Temperature (ºF)\");\n\n        \n        //draw x axis\n        if ( this.showX ) {\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                // .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n        }\n\n        svg.append(\"g\")         \n            .attr(\"class\", \"grid\")\n            // .attr(\"transform\", \"translate(0,\" + margin.top + \")\")\n            .call( d3.svg.axis()\n                .scale(x)\n                .orient(\"top\")\n                .tickValues(_.pluck(this.legs, 'start'))\n                .tickSize(-height, 0, 0)\n                .tickFormat(\"\")\n            )\n\n        var data = _.map(view.data, function(series){ return {metric:series.metric, data:simplify( _.filter(series.data, function(d) { return d[0] >= x.domain()[0] && d[0] <= x.domain()[1] }), width )} });\n        \n        var paths = svg.selectAll(\".lines\")\n            .data(data)\n          .enter().append(\"g\")\n            .attr(\"class\", \"lines\")\n            \n        paths.append(\"path\")\n            .attr(\"class\", \"line\")\n            .style(\"stroke\", function(d) { return color(d.metric); })\n            .attr(\"d\", function(d) { return line(d.data); })\n\n        function draw() {\n            svg.select(\"g.x.axis\").call(xAxis);\n            \n            //render a smaller amount of data\n            var start = x.domain()[0];\n            var end = x.domain()[1];\n            var data = _.map(view.data, function(series){ return {metric:series.metric, data:simplify( _.filter(series.data, function(d) { return d[0] >= start && d[0] <= end }), width )} });            \n\n            svg.selectAll('path.line')\n                .data(data)\n                .attr('d', function(d) { return line(d.data); })\n\n            svg.selectAll(\"rect.board\")\n                .attr(\"x\", function(d) { return x(d.start); })\n                .attr(\"width\", function(d) { return x(d.end) - x(d.start); })\n        }\n        draw();\n\n        var scrubline = svg.append(\"line\")\n                        .attr(\"class\", \"scrubline\")\n                        .attr('x1', -10)\n                        .attr('x2', -10)\n                        .attr('y1', 0)\n                        .attr('y2', height)\n\n        var legend = svg.append(\"text\")\n            .attr(\"y\", 10)\n            .attr(\"x\", width)\n            .style(\"text-anchor\", \"end\")\n            .style('font-size', '10px')\n            // .text(\"Temperature (ºF)\");\n\n        function highlight(time, pos) {\n            var xPos = x(time);\n\n            if ( xPos > 0 ) {\n                scrubline\n                    .attr('x1', xPos)\n                    .attr('x2', x(time))\n                    .attr(\"stroke-width\", 1)\n                    .attr(\"stroke\", \"#666\");\n\n                var text = _.map(view.data, function(series) { \n                    var index = _.sortedIndex( series.data, [time], function(point) { return point[0]; } );\n                    var point = series.data[index];\n                    return series.metric + ': ' + point[1].toFixed(2);\n                }).join('  ')\n\n                legend.text(text)\n            }\n            else {\n                legend.text(' ');\n                scrubline.attr('stroke-width', 0)\n            }\n        }\n\n        this.listenTo(app, 'scrub', highlight);\n        svg.on('mousemove', function(a,b,c,d) {\n            var pos = d3.mouse(this)\n            var time = x.invert(pos[0])\n            app.trigger('scrub', new Date(time), pos)\n        })\n\n        svg.on('dblclick', function(a,b,c,d) {\n            zoom = !zoom;\n\n            if ( zoom ) {\n                var pos = d3.mouse(this);\n                var time = new Date(x.invert(pos[0]));\n                var board = _.find(view.maneuvers, function(maneuver) { return maneuver.start <= time && maneuver.end >= time });\n\n                app.trigger('zoom', board.start, board.end);\n            }\n            else {\n                app.trigger('zoom', allTimeRange[0], allTimeRange[1]);\n            }\n\n        });\n\n        this.listenTo(app, 'zoom', function(start, end) {\n            console.info(start, end);\n\n            if ( start - allTimeRange[0] != 0 ) start -= 60000\n            if ( end - allTimeRange[1] != 0 ) end = 60000 + end //can't add date and int, but can subtract...\n            x.domain([start, end]);\n\n            //TODO: make efficient\n            y.domain([\n                d3.min( view.data, function(series) { return d3.min( _.filter(series.data, function(d) { return d[0] >= start && d[0] <= end }), function(d) { return d[1]}) } ),\n                d3.max( view.data, function(series) { return d3.max( _.filter(series.data, function(d) { return d[0] >= start && d[0] <= end }), function(d) { return d[1]}) } ),\n            ]);\n            if ( view.invertY ) {\n                y.domain( [y.domain()[1], y.domain()[0]] );\n            }\n\n            svg.select(\".x.axis\").call(xAxis);\n            svg.select(\".y.axis\").call(yAxis);\n\n            draw();\n        });\n    }\n});\n\n\nvar tackGraphView = Backbone.View.extend({\ntagName: 'div',\n    className: \"tackGraph\",\n    initialize: function(data, tack) {\n        this.data = data;\n        this.tack = tack;\n    },\n    render: function() {\n        var view = this;\n        \n        var margin = {top: 15, right: 10, bottom: 5, left: 10};\n\n        if ( this.showX ) {\n            margin.top = 30;\n        }\n\n        var width = 200 - margin.left - margin.right,\n            height = 200 - margin.top - margin.bottom;\n\n        var zoom = false;\n\n        var x = this.x = d3.scale.linear()\n            .range([0, width])\n            .domain(d3.extent( view.data, function(d) { return d.t } ) );\n\n        function line(data, metric, range, xform, scale) {\n            var cleanData = _.compact(_.map( data, function(d) { if (metric in d) return [d.t, d[metric]] } ));\n\n            var range = range || [height, 0];\n            var scale = scale || (d3.scale.linear()\n                .range(range)\n                .domain(d3.extent( cleanData, function(d) { return d[1] } ) ));\n\n            if (xform) xform(scale)\n\n            var line = d3.svg.line()\n                .interpolate(\"linear\")\n                .x(function(d) { return x(d[0]); })\n                .y(function(d) { return scale(d[1]); });\n\n            return [line(cleanData), scale];\n        }\n\n        \n        //\n        var ticks = [];\n        for ( var i = -30; i < 50; i+=10 ) {\n            ticks.push( moment(view.tack.timing.center).add(i, 'seconds') );\n        }\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"top\")\n            .tickValues( ticks )\n            .tickSize(3)\n            .tickFormat(function(d) { return parseInt(view.tack.timing.center.diff(d)/-1000); })\n\n\n        var svg = this.svg = d3.select(this.el).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            // .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n        svg.append(\"g\")         \n            .attr(\"class\", \"grid\")\n            // .attr(\"transform\", \"translate(0,\" + margin.top + \")\")\n            .call( d3.svg.axis()\n                .scale(x)\n                .orient(\"top\")\n                .tickValues( ticks )\n                .tickSize(-height, 0, 0)\n                .tickFormat(\"\")\n            )\n\n\n        //critical points\n        svg.append('line')\n            .attr('class', 'timing center')\n            .style('stroke', 'blue')\n            .attr({\"x1\": x(this.tack.timing.start), \"x2\": x(this.tack.timing.start), \"y1\": 0, \"y2\": height})\n    \n        svg.append('line')\n            .attr('class', 'timing center')\n            .style('stroke', 'blue')\n            .attr({\"x1\": x(this.tack.timing.end), \"x2\": x(this.tack.timing.end), \"y1\": 0, \"y2\": height})\n        \n        svg.append('line')\n            .attr('class', 'timing center')\n            .style('stroke', '#0a0')\n            .attr({\"x1\": x(this.tack.timing.recovered), \"x2\": x(this.tack.timing.recovered), \"y1\": 0, \"y2\": height})\n\n\n        //data\n        var speed = line(view.data, 'speed', null, function(scale) { scale.domain([0, 7]) });\n        var vmg = line(view.data, 'vmg', null, function(scale) { scale.domain([0, 7]) });\n\n        var newRange = [\n            Math.min(speed[1].domain()[0], vmg[1].domain()[0]),\n            Math.max(speed[1].domain()[1], vmg[1].domain()[1])\n        ];\n        // speed[1].domain(newRange)\n        // vmg[1].domain(newRange)\n\n        \n        svg.append('line')\n            .attr('class', 'timing center')\n            .attr({\"x1\": 0, \"x2\": width, \"y1\": vmg[1](this.tack.entryVmg), \"y2\": vmg[1](this.tack.entryVmg)})\n\n        svg.append('path')\n            .attr('class', 'speedLine')\n            .attr('fill', 'none')\n            .style('stroke', 'rgb(153,153,255)')\n            // .style('stroke-width', '.5')\n            .attr('d',  speed[0]);\n\n\n        svg.append('path')\n            .attr('class', 'vmgLine')\n            .attr('fill', 'none')\n            .style('stroke', 'blue')\n            // .style('stroke-width', '.5')\n            .attr('d', vmg[0] );\n\n        var tvmg = line(view.data, 'targetVmg', null, null, vmg[1] );\n        svg.append('path')\n            .attr('class', 'windLine')\n            .attr('fill', 'none')\n            .attr('stroke', 'cyan')\n            .attr('d', tvmg[0] );\n\n        //relational lines\n        ///\n        var lastTWA = null;\n        var lastHDG = null;\n        var lastAWA = null;\n        for ( var i=0; i < view.data.length; i++ ) {\n            if ('atwa' in view.data[i] ) {\n                if (lastTWA === null) lastTWA = view.data[i].atwa;\n\n                var diff = Math.abs(view.data[i].atwa-lastTWA);\n                view.data[i].windDelta = diff;\n\n                lastTWA = view.data[i].atwa;\n            }\n            if ('aawa' in view.data[i] ) {\n                if (lastAWA === null) lastAWA = view.data[i].aawa;\n\n                var diff = Math.abs(view.data[i].aawa-lastAWA);\n                view.data[i].awindDelta = diff;\n\n                lastAWA = view.data[i].aawa;\n            }\n            if ('hdg' in view.data[i] ) {\n                if (lastHDG === null) lastHDG = view.data[i].hdg;\n\n                var diff = Math.abs(view.data[i].hdg-lastHDG);\n                view.data[i].hdgDelta = diff;\n\n                lastHDG = view.data[i].hdg;\n            }\n        }\n\n        var wind = line(view.data, 'atwa', [height, height/3], function(scale) { scale.domain( [55, scale.domain()[0]] ); });\n        svg.append('path')\n            .attr('class', 'windLine')\n            .attr('fill', 'none')\n            .attr('stroke', 'red')\n            .attr('d', wind[0] );\n\n        // svg.append('path')\n        //     .attr('class', 'windLine')\n        //     .attr('fill', 'none')\n        //     .attr('stroke-width', .5)\n        //     .attr('stroke', 'red')\n        //     .attr('d', line(view.data, 'aawa', [height, height/2], function(scale) { scale.domain( wind[1].domain ); })[0] );\n\n        // svg.append('path')\n        //     .attr('class', 'windLine')\n        //     .attr('fill', 'none')\n        //     .attr('stroke', 'black')\n        //     .attr('stroke-width', .5)\n        //     .attr('d', line(view.data, 'hdg')[0] );\n\n        // var wd = line(view.data, 'windDelta');\n        // svg.append('path')\n        //     .attr('class', 'windDelta')\n        //     .attr('fill', 'none')\n        //     .attr('stroke', 'blue')\n        //     .attr('d', wd[0]);\n\n        // console.info( _.compact(_.map( view.data, function(d) { if ('windDelta' in d) return d['windDelta'] } )) )\n\n\n        // var awd = line(view.data, 'awa', [height, height/3], function(scale) { scale.domain( [scale.domain()[1], scale.domain()[0]] ); });\n        // svg.append('path')\n        //     .attr('class', 'awindDelta')\n        //     .attr('fill', 'none')\n        //     .attr('stroke', 'orange')\n        //     .attr('d', awd[0]);\n\n        \n\n        // var hd = line(view.data, 'hdgDelta');\n        // svg.append('path')\n        //     .attr('class', 'hdgDelta')\n        //     .attr('fill', 'none')\n        //     .attr('stroke', '#999')\n        //     .attr('d', hd[0]);\n\n        var ta = line(view.data, 'targetAngle', null, null, wind[1]);\n        svg.append('path')\n            .attr('class', 'targetAngle')\n            .attr('fill', 'none')\n            .attr('stroke', 'orange')\n            .attr('d', ta[0]);\n\n        // // console.info( _.compact(_.map( view.data, function(d) { if ('hdgDelta' in d) return d['hdgDelta'] } )) )\n\n        // svg.append('line')\n        //     .attr('class', 'timing center')\n        //     .attr({\"x1\": 0, \"x2\": width, \"y1\": hd[1](0), \"y2\": hd[1](0)})\n    }\n});","\nvar variance = 0; \n\nvar mapView = Backbone.View.extend({\n    className: 'map',\n    initialize: function(options) {\n        this.events = options.events === false ? false: true;\n        this.annotations = options.annotations === false ? false: true;\n        this.circles = options.circles || null;\n    },\n    render: function() {\n        var view = this;\n        \n        var margin = {top: 0, right: 0, bottom: 0, left: 0};\n        var width = this.$el.width() - margin.left - margin.right,\n            height = this.$el.height() - margin.top - margin.bottom;\n\n        width = width || 200;\n        height = height || 200;\n\n        // get extent of track, and make GEOJSON object\n        var allTimeRange = d3.extent(this.model.data, function(d) { return d.t; });\n        var lonExtent = d3.extent(this.model.data, function(d) { return d.lon; });\n        var latExtent = d3.extent(this.model.data, function(d) { return d.lat; });\n\n        var track = {type: \"LineString\", coordinates: _.compact( _.map(this.model.data, function(d) { return [d.lon, d.lat] }) ) };\n\n\n        //create 'unit' projection\n        var projection = d3.geo.mercator()\n            .scale(1)\n            .translate([0, 0]);\n\n        var trackPath = d3.geo.path()\n            .projection(projection)\n            .pointRadius(3.5);\n\n        //use unit projection to calculate scale factor for track\n        var b = trackPath.bounds(track);\n        var projectionScale = 1 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height);\n\n\n        // make the TWD at the start \"UP\"\n        // calculate bounding rect for current track rotated\n        // and scale so it fits in current rect\n        var angle = parseInt(refTws(this.model.data)) || 0;\n        var refAngle = angle % 180;\n        if (refAngle > 90 ) refAngle = 180 - refAngle;\n        var t = refAngle * Math.PI / 180;\n\n        var boundingX = (projectionScale * (b[1][0] - b[0][0]) * Math.cos(t) + projectionScale * (b[1][1] - b[0][1]) * Math.sin(t));\n        var boundingY = (projectionScale * (b[1][0] - b[0][0]) * Math.sin(t) + projectionScale * (b[1][1] - b[0][1]) * Math.cos(t));\n\n        var scale = .95 * Math.min( width/boundingX, height/boundingY );\n\n        var projectionTranslation = [(width - projectionScale*scale * (b[1][0] + b[0][0])) / 2, (height - projectionScale*scale * (b[1][1] + b[0][1])) / 2];\n\n        projection\n            .scale(projectionScale*scale)\n            .translate(projectionTranslation)\n\n\n        // svg container\n        var svg = this.svg = d3.select(this.el).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n\n        // background\n        svg.append(\"g\")\n          .append(\"rect\")\n            .attr(\"class\", \"water\")\n            .attr(\"height\", height)\n            .attr(\"width\", width);\n\n        \n        if ( this.annotations ) {\n            svg.append(\"g\")\n                .attr('class', 'annotations')\n\n            // wind\n            var wind = svg.select('g.annotations')\n                        .append(\"g\")\n                            .attr('transform', 'translate(500, 50)')\n                        .append(\"g\")\n                            .attr(\"class\", \"wind\")\n                            .attr('transform', 'rotate(180)')\n\n            wind.append(\"line\")\n                .attr({\"x1\": 0, \"x2\": 0, \"y1\": 10, \"y2\": -10});\n\n            wind.append(\"line\")\n                .attr({\"x1\": 0, \"x2\": -4, \"y1\": -10, \"y2\": -6});\n\n            wind.append(\"line\")\n                .attr({\"x1\": 0, \"x2\": 4, \"y1\": -10, \"y2\": -6});\n\n            // compass\n            var compass = svg.select('g.annotations')\n                            .append('g')\n                                .attr('transform', 'translate(50, 50)')\n                            .append(\"g\")\n                                .attr(\"class\", \"compass\")\n                                .attr('transform', 'rotate(-'+angle+')');\n\n            compass.append(\"circle\")\n                .attr(\"r\", 10) \n\n            compass.append(\"path\")\n                .attr('class', 'ew')\n                .attr(\"d\", \"M17,0 L0,3 L-17,0 L0,-3 L17,0\")\n\n            compass.append(\"path\")\n                .attr(\"d\", \"M0,-18 L3,0 L0,18 L-3,0 L0,-18\")\n\n            compass.append(\"path\")\n                .attr(\"d\", \"M4,4 L4,-4 L-4,-4 L-4,4 L4,4\")\n\n            compass.append('text')\n                .attr('dy', -20)\n                .attr('dx', -4)\n                .text('N')\n                \n            // compass.append(\"circle\")\n            //     .attr('class', 'ew')\n            //     .attr(\"r\", 4) \n        }\n\n        // track\n        var world = svg.append('g')\n            .attr('class', 'world')        \n            .attr('transform', function() { return \"rotate(-\"+angle+\",\" + (width / 2) + \",\" + (height / 2) + \")\" })\n        \n          \n        world.append('path')\n            .attr('class', 'track')\n            .attr('d', trackPath(track))\n\n        if ( this.circles ) {\n            var circles = _.filter(this.model.data, function(m) { return (Math.round((m.t - view.circles)/1000) % 10) == 0 });    \n\n            world.selectAll('circle.timing')\n                .data(circles)\n              .enter().append(\"circle\")\n                .attr('class', 'timing')\n                .attr('r', '3')\n                .attr('cx', function(d) { return projection([d.lon, d.lat])[0] })\n                .attr('cy', function(d) { return projection([d.lon, d.lat])[1] })\n        }\n        \n\n\n        var labels = world.append('g')\n            .attr('class', 'labels');\n          \n        if ('tacks' in view.model) {\n            var nodes = [];\n            var links = [];\n\n            for (var i=0; i < view.model.tacks.length; i++) {\n                var d = view.model.tacks[i];\n                var pos = projection(d.position);\n\n                var l = {\n                    tack: d,\n                    x: pos[0],\n                    y: pos[1]\n                }\n                var p = {\n                    fixed: true,\n                    x: pos[0],\n                    y: pos[1]\n                }\n\n                nodes.push(l,p)\n                links.push({\n                    source: p,\n                    target: l,\n                    weight: 1\n                })\n            }\n\n            var force = d3.layout.force()\n                            .nodes(nodes)\n                            .links(links)\n                            .gravity(0)\n                            .linkDistance(1)\n                            .linkStrength(4)\n                            .charge(-50)\n                            .size([width, height]);\n            force.start();\n            for (var i = 0; i < 50; ++i) force.tick();\n            force.stop();\n\n            // console.info('links', _.map())\n\n            // var anchorNode = vis.selectAll(\"g.anchorNode\").data(force2.nodes()).enter().append(\"svg:g\").attr(\"class\", \"anchorNode\");\n            \n            // anchorNode.append(\"svg:circle\").attr(\"r\", 0).style(\"fill\", \"#FFF\");\n            //     anchorNode.append(\"svg:text\").text(function(d, i) {\n            //     return i % 2 == 0 ? \"\" : d.node.label\n            // }).style(\"fill\", \"#555\").style(\"font-family\", \"Arial\").style(\"font-size\", 12);\n\n            labels.selectAll('text.tack-label')\n                .data(_.filter(nodes, function(d) { return 'tack' in d }))\n              .enter().append(\"text\")\n                .attr(\"class\", 'tack-label')\n\n                .attr('transform', function(d) { return 'translate('+ d.x + \",\" + d.y + ')rotate(' + angle +')' })\n                // .attr('dx', function(d) { return d.tack.board == 'U-P'?-5:5 })\n                .attr('dy', '.35em')\n                .attr('text-anchor', function(d) { return d.tack.board == 'U-P'?'end':null })\n                .text(function(d) { return (d.tack.loss>0?\"+\":\"\")+d.tack.loss.toFixed(0); })\n                .on('click', function(d) {\n                    app.trigger('select-tack', d.tack, this);\n                })\n\n            app.trigger('select-tack', view.model.tacks[0]);\n        }\n\n        //create boat and put at start of race\n        var start = projection(track.coordinates[0]);\n        var hdg = view.model.data[0].hdg || 0;\n        var boat = world.append('path')\n            .attr('d', 'M0,-80 C60,0 50,50 35,80 L-35,80 C-50,50 -60,0 0, -80')\n            .attr('class', 'boat')\n            .attr('transform', 'translate('+start[0]+','+start[1]+')scale(.06)rotate('+(hdg)+',-10,-10)')\n\n        if ( !this.events ) {\n            return;\n        }\n\n        // //listen to app events\n        this.listenTo(app, 'scrub', function(time) {\n            var index = _.sortedIndex( view.model.data, {t: time}, function(point) { return point.t; } );\n            var point = view.model.data[index];\n\n            var coord = projection([point.lon, point.lat]);\n            \n            boat.attr('transform', 'translate('+(coord[0])+\",\"+(coord[1]) +\")scale(.06)rotate(\"+point.hdg+\",-10,-10)\")\n\n            //TODO: smooth the TWD\n            if ( 'twd' in point ) \n                wind.attr('transform', 'rotate('+ (180-angle+point.twd) +')')\n        });\n\n        this.listenTo(app, 'zoom', function(start, end) {\n            // if ( start - allTimeRange[0] != 0 ) start -= 60000\n            // if ( end - allTimeRange[1] != 0 ) end = 60000 + end.getTime() //can't add date and int, but can subtract...\n            \n            // var trackPart = {type: \"LineString\", coordinates: _.compact( _.map(this.model.data, function(d) { if(d.t >= start && d.t <= end) return [d.lon, d.lat] }) ) };\n            \n            // var center = trackPath.centroid(trackPart);\n            // var partBounds = trackPath.bounds(trackPart);\n            // var bounds = trackPath.bounds(track);\n\n            // var scale = Math.max( Math.abs((bounds[1][0] - bounds[0][0])/(partBounds[1][0] - partBounds[0][0])), Math.abs((bounds[1][1] - bounds[0][1])/(partBounds[0][1] - partBounds[1][1])) );\n            // console.info('scale', scale, (bounds[1][0] - bounds[0][0]), (partBounds[1][0] - partBounds[0][0]), (bounds[1][1] - bounds[0][1]), (partBounds[0][1] - partBounds[1][1]));\n\n            // center[0] = (width/2 - center[0]) / scale;\n            // center[1] = (height/2 - center[1]) / scale;\n            // svg.selectAll('.world')\n            //     .attr('transform', \"rotate(-\"+angle+\",\" + (width / 2) + \",\" + (height / 2) + \")translate(\"+center[0]+\",\"+center[1]+\")scale(\"+scale+\")\" )\n\n            \n        });\n    },\n    onSelect: function(range) {\n\n    },\n    onScrub: function(x) {\n       // this.boat.setTime(x / 1000 - this.model.view.offset);\n    }\n});\n"]}